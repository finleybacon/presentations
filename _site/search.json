[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Presentations",
    "section": "",
    "text": "Order By\n      Default\n      \n        Date - Oldest\n      \n      \n        Date - Newest\n      \n      \n        Title\n      \n      \n        Author\n      \n    \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\n\nTitle\n\n\n\nAudience\n\n\n\nAuthor\n\n\n\n\n\n\n\n\n2025-09-24\n\n\nCALM: Architecture-as-Code\n\n\nISD Architecture\n\n\nFinley Bacon\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "calm/index.html#what",
    "href": "calm/index.html#what",
    "title": "CALM: Architecture-as-Code",
    "section": "What?",
    "text": "What?\n\nModelling architecture in code (e.g. JSON, YAML, DSLs)\nGenerate diagrams from models instead of manually drawing them\nStore architecture close to source code"
  },
  {
    "objectID": "calm/index.html#why",
    "href": "calm/index.html#why",
    "title": "CALM: Architecture-as-Code",
    "section": "Why?",
    "text": "Why?\n\nAlleged benefits:\n\n\nMachine-readable architecture models enable automated validation & compliance checks\nArchitecture can be version controlled alongside source code\nDevelopers and architects work from the same source of truth\nA single model can generate multiple outputs (diagrams, documentation, reports)\nEasier to keep architecture up to date as the system changes"
  },
  {
    "objectID": "calm/index.html#what-is-calm",
    "href": "calm/index.html#what-is-calm",
    "title": "CALM: Architecture-as-Code",
    "section": "What is CALM?",
    "text": "What is CALM?\nThe Common Architecture Language Model\n\n\nhttps://calm.finos.org/"
  },
  {
    "objectID": "calm/index.html#json-schemas",
    "href": "calm/index.html#json-schemas",
    "title": "CALM: Architecture-as-Code",
    "section": "JSON Schemas",
    "text": "JSON Schemas\n\n… are gross\n\n\n{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"$id\": \"https://calm.finos.org/release/1.0/meta/core.json\",\n  \"title\": \"Common Architecture Language Model (CALM) Vocab\",\n  \"type\" : \"object\",\n  \"properties\": {\n    \"nodes\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/defs/node\"\n      }\n    },\n    \"relationships\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/defs/relationship\"\n      }\n    },\n    \"metadata\": {\n      \"$ref\": \"#/defs/metadata\"\n    },\n    \"controls\": {\n      \"$ref\": \"control.json#/defs/controls\"\n    },\n    \"flows\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"flow.json#/defs/flow\"\n      }\n    },\n    \"adrs\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"External links to ADRs (Architecture Decision Records) or similar documents that provide context or decisions related to the architecture. These can be URLs or references to internal documentation.\"\n    },\n    \"additionalProperties\": false\n  },\n  \"defs\": {\n    \"node\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"unique-id\": {\n          \"type\": \"string\"\n        },\n        \"node-type\": {\n          \"$ref\": \"#/defs/node-type-definition\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"details\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"detailed-architecture\": {\n              \"type\": \"string\"\n            },\n            \"required-pattern\": {\n              \"type\": \"string\"\n            }\n          },\n          \"additionalProperties\": false\n        },\n        \"interfaces\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"anyOf\": [\n              { \"$ref\": \"interface.json#/defs/interface-definition\" },\n              { \"$ref\": \"interface.json#/defs/interface-type\" }\n            ]\n          }\n        },\n        \"controls\": {\n          \"$ref\": \"control.json#/defs/controls\"\n        },\n        \"metadata\": {\n          \"$ref\": \"#/defs/metadata\"\n        }\n      },\n      \"required\": [\n        \"unique-id\",\n        \"node-type\",\n        \"name\",\n        \"description\"\n      ],\n      \"additionalProperties\": true\n    },\n    \"relationship\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"unique-id\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"relationship-type\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"interacts\": {\n              \"$ref\": \"#/defs/interacts-type\"\n            },\n            \"connects\": {\n              \"$ref\": \"#/defs/connects-type\"\n            },\n            \"deployed-in\": {\n              \"$ref\": \"#/defs/deployed-in-type\"\n            },\n            \"composed-of\": {\n              \"$ref\": \"#/defs/composed-of-type\"\n            },\n            \"options\": {\n              \"$ref\": \"#/defs/option-type\"\n            }\n          },\n          \"oneOf\": [\n            {\n              \"required\": [\n                \"deployed-in\"\n              ]\n            },\n            {\n              \"required\": [\n                \"composed-of\"\n              ]\n            },\n            {\n              \"required\": [\n                \"interacts\"\n              ]\n            },\n            {\n              \"required\": [\n                \"connects\"\n              ]\n            },\n            {\n              \"required\": [\n                \"options\"\n              ]\n            }\n          ]\n        },\n        \"protocol\": {\n          \"$ref\": \"#/defs/protocol\"\n        },\n        \"metadata\": {\n          \"$ref\": \"#/defs/metadata\"\n        },\n        \"controls\": {\n          \"$ref\": \"control.json#/defs/controls\"\n        }\n      },\n      \"required\": [\n        \"unique-id\",\n        \"relationship-type\"\n      ],\n      \"additionalProperties\": true\n    },\n    \"protocol\": {\n      \"enum\": [\n        \"HTTP\",\n        \"HTTPS\",\n        \"FTP\",\n        \"SFTP\",\n        \"JDBC\",\n        \"WebSocket\",\n        \"SocketIO\",\n        \"LDAP\",\n        \"AMQP\",\n        \"TLS\",\n        \"mTLS\",\n        \"TCP\"\n      ]\n    },\n    \"node-type-definition\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"actor\",\n            \"ecosystem\",\n            \"system\",\n            \"service\",\n            \"database\",\n            \"network\",\n            \"ldap\",\n            \"webclient\",\n            \"data-asset\"\n          ]\n        },\n        {\n          \"type\": \"string\"\n        }\n      ]\n    },\n    \"interacts-type\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"actor\": {\n          \"type\": \"string\"\n        },\n        \"nodes\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"required\": [\n        \"actor\",\n        \"nodes\"\n      ]\n    },\n    \"connects-type\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"source\": {\n          \"$ref\": \"interface.json#/defs/node-interface\"\n        },\n        \"destination\": {\n          \"$ref\": \"interface.json#/defs/node-interface\"\n        }\n      },\n      \"required\": [\n        \"source\",\n        \"destination\"\n      ]\n    },\n    \"deployed-in-type\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"container\": {\n          \"type\": \"string\"\n        },\n        \"nodes\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"required\": [\n        \"container\",\n        \"nodes\"\n      ]\n    },\n    \"composed-of-type\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"container\": {\n          \"type\": \"string\"\n        },\n        \"nodes\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"required\": [\n        \"container\",\n        \"nodes\"\n      ]\n    },\n    \"option-type\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/defs/decision\"\n      }\n    },\n    \"decision\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"nodes\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"relationships\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"controls\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"required\": [\n        \"description\",\n        \"nodes\",\n        \"relationships\"\n      ]\n    },\n    \"metadata\": {\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\"\n          }\n        },\n        {\n          \"type\": \"object\",\n          \"additionalProperties\": true\n        }\n      ]\n    }\n  }\n}"
  },
  {
    "objectID": "calm/index.html#cast-your-minds-back",
    "href": "calm/index.html#cast-your-minds-back",
    "title": "CALM: Architecture-as-Code",
    "section": "Cast your minds back",
    "text": "Cast your minds back"
  },
  {
    "objectID": "calm/index.html#data-archive",
    "href": "calm/index.html#data-archive",
    "title": "CALM: Architecture-as-Code",
    "section": "Data Archive",
    "text": "Data Archive"
  },
  {
    "objectID": "calm/index.html#arc-services-portal",
    "href": "calm/index.html#arc-services-portal",
    "title": "CALM: Architecture-as-Code",
    "section": "ARC Services Portal",
    "text": "ARC Services Portal"
  },
  {
    "objectID": "calm/index.html#section",
    "href": "calm/index.html#section",
    "title": "CALM: Architecture-as-Code",
    "section": "",
    "text": "c4model.com:\n\nThe C4 model was created as a way to help software development teams describe and communicate software architecture, both during up-front design sessions and when retrospectively documenting an existing codebase."
  },
  {
    "objectID": "calm/index.html#rationale",
    "href": "calm/index.html#rationale",
    "title": "CALM: Architecture-as-Code",
    "section": "Rationale",
    "text": "Rationale"
  },
  {
    "objectID": "calm/index.html#in-short",
    "href": "calm/index.html#in-short",
    "title": "CALM: Architecture-as-Code",
    "section": "In short",
    "text": "In short\nc4model.com\n\n\n\nInconsistent notation (colour coding, shapes, line styles, etc)\nAmbiguous naming\nUnlabelled relationships\nGeneric terminology\nMissing technology choices\nMixed abstractions\nNot good at communicating architecture"
  },
  {
    "objectID": "calm/index.html#workflow",
    "href": "calm/index.html#workflow",
    "title": "CALM: Architecture-as-Code",
    "section": "Workflow",
    "text": "Workflow\n\nModel using Structurizr DSL\n\n\nworkspace \"ARC Services Portal\" \"Models the architecture of a research services web portal\" {\n\n    !identifiers hierarchical\n\n    model {\n\n        properties {\n            \"structurizr.groupSeparator\" \"/\"\n        }\n\n        user = person \"Researcher\" \"Uses the platform to manage their research profile and data.\"\n        admin = person \"Admin\" \"Portal user with elevated permissions to edit data or review submissions.\"\n\n        entra = softwareSystem \"Microsoft Entra\" \"Identity provider (SSO)\" \"Existing System\"\n        tre = softwareSystem \"TRE\" \"Secure processing environment for sensitive research data\" \"Existing System\"\n        ghcr = softwareSystem \"GitHub Container Registry\" \"Stores container images\" \"Existing System\"\n        uclSystem = softwareSystem \"...\" \"Other UCL consumer of portal data\" \"Existing System\"\n\n        portal = softwareSystem \"ARC Services Portal\" \"Enables management of Studies, Projects, user training and information governance\" {\n\n            group \"K8S cluster\" {\n\n                api = container \"API\" \"API backend with /web/api and /tre/api (and other) endpoints\" \"Go\" {\n\n                    group \"Shared Services\" {\n                        projectService = component \"Project Service\" \"Handles project workflows\" \"Go\"\n                        userService = component \"User Service\" \"Handles user workflows\" \"Go\"\n                        otherService = component \"...\" \"Other backend services\" \"Go\"\n                    }\n\n                    group \"Web API\" {\n                        webhttpHandlers = component \"HTTP Handlers for web frontend\" \"Handles REST endpoints\" \"Go\"\n                        webhttpHandlers -&gt; userService \"Calls\"\n                        webhttpHandlers -&gt; projectService \"Calls\"\n                        webhttpHandlers -&gt; otherService \"Calls\"\n                    }\n\n                    group \"TRE API\" {\n                        trehttpHandlers = component \"HTTP Handlers for UCL TREs\" \"Handles REST endpoints\" \"Go\"\n                        trehttpHandlers -&gt; userService \"Calls\"\n                        trehttpHandlers -&gt; projectService \"Calls\"\n                        trehttpHandlers -&gt; otherService \"Calls\"\n                    }\n\n                    group \"Other API\" {\n                        otherhttpHandlers = component \"HTTP Handlers for other UCL systems\" \"Handles REST endpoints\" \"Go\"\n                        otherhttpHandlers -&gt; otherService \"Calls\"\n                    }\n                }\n\n                webFrontend = container \"Web Frontend\" \"User-facing web app\" \"React, TypeScript\" {\n                    pages = component \"Pages\" \"UCL Design System-styled pages for profile, studies, projects\" \"React\"\n                    apiClient = component \"API Client\" \"Generated from OpenAPI spec\" \"TypeScript\"\n\n                    pages -&gt; apiClient \"Calls\"\n                }\n\n                oauth2Proxy = container \"OAuth2 Proxy\" \"Proxy providing OAuth2 authentication\" \"quay.io/oauth2-proxy/oauth2-proxy\"\n\n                nginx = container \"Reverse Proxy\" \"Routes requests to frontend and backend\" \"nginx\"\n\n                postgres = container \"Database\" \"Stores user, project, portal etc. data\" \"PostgreSQL\"\n\n                api.projectService -&gt; postgres \"Reads/writes data\"\n                api.userService -&gt; postgres \"Reads/writes data\"\n                api.otherService -&gt; postgres \"Read/writes data\"\n                nginx -&gt; api.trehttpHandlers \"Proxies /tre/api requests\"\n                nginx -&gt; api.otherhttpHandlers \"Proxies other api requests\"\n                nginx -&gt; webFrontend.pages \"Serves\"\n                webFrontend.apiClient -&gt; oauth2Proxy \"Forwards /web/api requests for authentication\"\n                oauth2Proxy -&gt; api.webhttpHandlers \"Forwards authenticated /web/api requests to backend\"\n\n            }\n\n            deploy = container \"CI/CD Pipeline\" \"Builds and deploys infrastructure and app\" \"GitHub Actions + Terraform\" {\n\n                group \"Portal App Repository\" {\n                    gha_portal = component \"GitHub Actions (Portal Repo)\" \"Builds & pushes container images\" \"GitHub Actions\"\n                }\n\n                group \"Infrastructure Repository\" {\n                    gha_infra = component \"GitHub Actions (Infra Repo)\" \"Applies Terraform in AWS\" \"GitHub Actions\"\n                    tf = component \"Terraform Code\" \"Defines and provisions cloud infra\" \"Terraform\"\n                    gha_infra -&gt; tf \"Runs\"\n                }\n            }\n\n            portal.deploy.tf -&gt; ghcr \"Pulls images for deployment\"\n            portal.deploy.gha_portal -&gt; ghcr \"Pushes container images\"\n        }\n\n        user -&gt; portal.webFrontend.pages \"Accesses via browser\"\n        admin -&gt; portal.webFrontend.pages \"Administers via browser\"\n        portal.oauth2Proxy -&gt; entra \"Authenticates requests against\" \"SSO\"\n        tre -&gt; portal.nginx \"Accesses /tre/api for data retrieval\" \"REST/JSON\"\n        uclSystem -&gt; portal.nginx \"Accesses api for data retrieval\" \"REST/JSON\"\n    }\n\n    views {\n\n        systemContext portal \"C1-Portal_Context\" {\n            include *\n            description \"Context diagram showing how the Research Platform fits within the broader environment.\"\n        }\n\n        container portal \"C2-Portal_Containers\" {\n            include *\n            description \"Container view showing major services running in Kubernetes, including API, frontend, proxy, and DB.\"\n        }\n\n        component portal.api \"C3-Web_API_Internals\" {\n            include *\n            description \"Component view showing key service components inside the API backend.\"\n        }\n\n        component portal.webFrontend \"C3-Web_Frontend_Internals\" {\n            include *\n            description \"Component view showing the UI modules and OpenAPI client.\"\n        }\n\n        component portal.deploy \"C3-Deployment_Workflow\" {\n            include *\n            description \"Component view showing how CI/CD is managed using GitHub Actions and Terraform.\"\n        }\n\n        styles {\n            element \"Person\" {\n                shape person\n                background #08427b\n                color #ffffff\n            }\n\n            element \"Software System\" {\n                background #1168bd\n                color #ffffff\n            }\n\n            element \"Container\" {\n                background #438dd5\n                color #ffffff\n            }\n\n            element \"Component\" {\n                background #85bbf0\n                color #000000\n            }\n\n            element \"Existing System\" {\n                background #999999\n            }\n\n            element \"Group:K8S cluster\" {\n                color #d86613\n                icon https://static.structurizr.com/themes/amazon-web-services-2020.04.30/amazon-elastic-kubernetes-service.png\n            }\n        }\n    }\n}"
  },
  {
    "objectID": "calm/index.html#workflow-1",
    "href": "calm/index.html#workflow-1",
    "title": "CALM: Architecture-as-Code",
    "section": "Workflow",
    "text": "Workflow\n\nCreate views\n\nworkspace \"ARC Services Portal\" \"Models the architecture of a research services web portal\" {\n\n    !identifiers hierarchical\n\n    model {\n\n        properties {\n            \"structurizr.groupSeparator\" \"/\"\n        }\n\n        user = person \"Researcher\" \"Uses the platform to manage their research profile and data.\"\n        admin = person \"Admin\" \"Portal user with elevated permissions to edit data or review submissions.\"\n\n        entra = softwareSystem \"Microsoft Entra\" \"Identity provider (SSO)\" \"Existing System\"\n        tre = softwareSystem \"TRE\" \"Secure processing environment for sensitive research data\" \"Existing System\"\n        ghcr = softwareSystem \"GitHub Container Registry\" \"Stores container images\" \"Existing System\"\n        uclSystem = softwareSystem \"...\" \"Other UCL consumer of portal data\" \"Existing System\"\n\n        portal = softwareSystem \"ARC Services Portal\" \"Enables management of Studies, Projects, user training and information governance\" {\n\n            group \"K8S cluster\" {\n\n                api = container \"API\" \"API backend with /web/api and /tre/api (and other) endpoints\" \"Go\" {\n\n                    group \"Shared Services\" {\n                        projectService = component \"Project Service\" \"Handles project workflows\" \"Go\"\n                        userService = component \"User Service\" \"Handles user workflows\" \"Go\"\n                        otherService = component \"...\" \"Other backend services\" \"Go\"\n                    }\n\n                    group \"Web API\" {\n                        webhttpHandlers = component \"HTTP Handlers for web frontend\" \"Handles REST endpoints\" \"Go\"\n                        webhttpHandlers -&gt; userService \"Calls\"\n                        webhttpHandlers -&gt; projectService \"Calls\"\n                        webhttpHandlers -&gt; otherService \"Calls\"\n                    }\n\n                    group \"TRE API\" {\n                        trehttpHandlers = component \"HTTP Handlers for UCL TREs\" \"Handles REST endpoints\" \"Go\"\n                        trehttpHandlers -&gt; userService \"Calls\"\n                        trehttpHandlers -&gt; projectService \"Calls\"\n                        trehttpHandlers -&gt; otherService \"Calls\"\n                    }\n\n                    group \"Other API\" {\n                        otherhttpHandlers = component \"HTTP Handlers for other UCL systems\" \"Handles REST endpoints\" \"Go\"\n                        otherhttpHandlers -&gt; otherService \"Calls\"\n                    }\n                }\n\n                webFrontend = container \"Web Frontend\" \"User-facing web app\" \"React, TypeScript\" {\n                    pages = component \"Pages\" \"UCL Design System-styled pages for profile, studies, projects\" \"React\"\n                    apiClient = component \"API Client\" \"Generated from OpenAPI spec\" \"TypeScript\"\n\n                    pages -&gt; apiClient \"Calls\"\n                }\n\n                oauth2Proxy = container \"OAuth2 Proxy\" \"Proxy providing OAuth2 authentication\" \"quay.io/oauth2-proxy/oauth2-proxy\"\n\n                nginx = container \"Reverse Proxy\" \"Routes requests to frontend and backend\" \"nginx\"\n\n                postgres = container \"Database\" \"Stores user, project, portal etc. data\" \"PostgreSQL\"\n\n                api.projectService -&gt; postgres \"Reads/writes data\"\n                api.userService -&gt; postgres \"Reads/writes data\"\n                api.otherService -&gt; postgres \"Read/writes data\"\n                nginx -&gt; api.trehttpHandlers \"Proxies /tre/api requests\"\n                nginx -&gt; api.otherhttpHandlers \"Proxies other api requests\"\n                nginx -&gt; webFrontend.pages \"Serves\"\n                webFrontend.apiClient -&gt; oauth2Proxy \"Forwards /web/api requests for authentication\"\n                oauth2Proxy -&gt; api.webhttpHandlers \"Forwards authenticated /web/api requests to backend\"\n\n            }\n\n            deploy = container \"CI/CD Pipeline\" \"Builds and deploys infrastructure and app\" \"GitHub Actions + Terraform\" {\n\n                group \"Portal App Repository\" {\n                    gha_portal = component \"GitHub Actions (Portal Repo)\" \"Builds & pushes container images\" \"GitHub Actions\"\n                }\n\n                group \"Infrastructure Repository\" {\n                    gha_infra = component \"GitHub Actions (Infra Repo)\" \"Applies Terraform in AWS\" \"GitHub Actions\"\n                    tf = component \"Terraform Code\" \"Defines and provisions cloud infra\" \"Terraform\"\n                    gha_infra -&gt; tf \"Runs\"\n                }\n            }\n\n            portal.deploy.tf -&gt; ghcr \"Pulls images for deployment\"\n            portal.deploy.gha_portal -&gt; ghcr \"Pushes container images\"\n        }\n\n        user -&gt; portal.webFrontend.pages \"Accesses via browser\"\n        admin -&gt; portal.webFrontend.pages \"Administers via browser\"\n        portal.oauth2Proxy -&gt; entra \"Authenticates requests against\" \"SSO\"\n        tre -&gt; portal.nginx \"Accesses /tre/api for data retrieval\" \"REST/JSON\"\n        uclSystem -&gt; portal.nginx \"Accesses api for data retrieval\" \"REST/JSON\"\n    }\n\n    views {\n\n        systemContext portal \"C1-Portal_Context\" {\n            include *\n            description \"Context diagram showing how the Research Platform fits within the broader environment.\"\n        }\n\n        container portal \"C2-Portal_Containers\" {\n            include *\n            description \"Container view showing major services running in Kubernetes, including API, frontend, proxy, and DB.\"\n        }\n\n        component portal.api \"C3-Web_API_Internals\" {\n            include *\n            description \"Component view showing key service components inside the API backend.\"\n        }\n\n        component portal.webFrontend \"C3-Web_Frontend_Internals\" {\n            include *\n            description \"Component view showing the UI modules and OpenAPI client.\"\n        }\n\n        component portal.deploy \"C3-Deployment_Workflow\" {\n            include *\n            description \"Component view showing how CI/CD is managed using GitHub Actions and Terraform.\"\n        }\n\n        styles {\n            element \"Person\" {\n                shape person\n                background #08427b\n                color #ffffff\n            }\n\n            element \"Software System\" {\n                background #1168bd\n                color #ffffff\n            }\n\n            element \"Container\" {\n                background #438dd5\n                color #ffffff\n            }\n\n            element \"Component\" {\n                background #85bbf0\n                color #000000\n            }\n\n            element \"Existing System\" {\n                background #999999\n            }\n\n            element \"Group:K8S cluster\" {\n                color #d86613\n                icon https://static.structurizr.com/themes/amazon-web-services-2020.04.30/amazon-elastic-kubernetes-service.png\n            }\n        }\n    }\n}"
  },
  {
    "objectID": "calm/index.html#hello-world-example",
    "href": "calm/index.html#hello-world-example",
    "title": "CALM: Architecture-as-Code",
    "section": "Hello World Example",
    "text": "Hello World Example\n\nStep 1: Define the main function.\n\n\nStep 2: Print “Hello World” inside the function.\n\n{.python code-line-numbers=\"1|2| .fragment} def main():     print(\"Hello World\")"
  },
  {
    "objectID": "calm/index.html#workflow-2",
    "href": "calm/index.html#workflow-2",
    "title": "CALM: Architecture-as-Code",
    "section": "Workflow",
    "text": "Workflow\n\nApply styles\n\nworkspace \"ARC Services Portal\" \"Models the architecture of a research services web portal\" {\n\n    !identifiers hierarchical\n\n    model {\n\n        properties {\n            \"structurizr.groupSeparator\" \"/\"\n        }\n\n        user = person \"Researcher\" \"Uses the platform to manage their research profile and data.\"\n        admin = person \"Admin\" \"Portal user with elevated permissions to edit data or review submissions.\"\n\n        entra = softwareSystem \"Microsoft Entra\" \"Identity provider (SSO)\" \"Existing System\"\n        tre = softwareSystem \"TRE\" \"Secure processing environment for sensitive research data\" \"Existing System\"\n        ghcr = softwareSystem \"GitHub Container Registry\" \"Stores container images\" \"Existing System\"\n        uclSystem = softwareSystem \"...\" \"Other UCL consumer of portal data\" \"Existing System\"\n\n        portal = softwareSystem \"ARC Services Portal\" \"Enables management of Studies, Projects, user training and information governance\" {\n\n            group \"K8S cluster\" {\n\n                api = container \"API\" \"API backend with /web/api and /tre/api (and other) endpoints\" \"Go\" {\n\n                    group \"Shared Services\" {\n                        projectService = component \"Project Service\" \"Handles project workflows\" \"Go\"\n                        userService = component \"User Service\" \"Handles user workflows\" \"Go\"\n                        otherService = component \"...\" \"Other backend services\" \"Go\"\n                    }\n\n                    group \"Web API\" {\n                        webhttpHandlers = component \"HTTP Handlers for web frontend\" \"Handles REST endpoints\" \"Go\"\n                        webhttpHandlers -&gt; userService \"Calls\"\n                        webhttpHandlers -&gt; projectService \"Calls\"\n                        webhttpHandlers -&gt; otherService \"Calls\"\n                    }\n\n                    group \"TRE API\" {\n                        trehttpHandlers = component \"HTTP Handlers for UCL TREs\" \"Handles REST endpoints\" \"Go\"\n                        trehttpHandlers -&gt; userService \"Calls\"\n                        trehttpHandlers -&gt; projectService \"Calls\"\n                        trehttpHandlers -&gt; otherService \"Calls\"\n                    }\n\n                    group \"Other API\" {\n                        otherhttpHandlers = component \"HTTP Handlers for other UCL systems\" \"Handles REST endpoints\" \"Go\"\n                        otherhttpHandlers -&gt; otherService \"Calls\"\n                    }\n                }\n\n                webFrontend = container \"Web Frontend\" \"User-facing web app\" \"React, TypeScript\" {\n                    pages = component \"Pages\" \"UCL Design System-styled pages for profile, studies, projects\" \"React\"\n                    apiClient = component \"API Client\" \"Generated from OpenAPI spec\" \"TypeScript\"\n\n                    pages -&gt; apiClient \"Calls\"\n                }\n\n                oauth2Proxy = container \"OAuth2 Proxy\" \"Proxy providing OAuth2 authentication\" \"quay.io/oauth2-proxy/oauth2-proxy\"\n\n                nginx = container \"Reverse Proxy\" \"Routes requests to frontend and backend\" \"nginx\"\n\n                postgres = container \"Database\" \"Stores user, project, portal etc. data\" \"PostgreSQL\"\n\n                api.projectService -&gt; postgres \"Reads/writes data\"\n                api.userService -&gt; postgres \"Reads/writes data\"\n                api.otherService -&gt; postgres \"Read/writes data\"\n                nginx -&gt; api.trehttpHandlers \"Proxies /tre/api requests\"\n                nginx -&gt; api.otherhttpHandlers \"Proxies other api requests\"\n                nginx -&gt; webFrontend.pages \"Serves\"\n                webFrontend.apiClient -&gt; oauth2Proxy \"Forwards /web/api requests for authentication\"\n                oauth2Proxy -&gt; api.webhttpHandlers \"Forwards authenticated /web/api requests to backend\"\n\n            }\n\n            deploy = container \"CI/CD Pipeline\" \"Builds and deploys infrastructure and app\" \"GitHub Actions + Terraform\" {\n\n                group \"Portal App Repository\" {\n                    gha_portal = component \"GitHub Actions (Portal Repo)\" \"Builds & pushes container images\" \"GitHub Actions\"\n                }\n\n                group \"Infrastructure Repository\" {\n                    gha_infra = component \"GitHub Actions (Infra Repo)\" \"Applies Terraform in AWS\" \"GitHub Actions\"\n                    tf = component \"Terraform Code\" \"Defines and provisions cloud infra\" \"Terraform\"\n                    gha_infra -&gt; tf \"Runs\"\n                }\n            }\n\n            portal.deploy.tf -&gt; ghcr \"Pulls images for deployment\"\n            portal.deploy.gha_portal -&gt; ghcr \"Pushes container images\"\n        }\n\n        user -&gt; portal.webFrontend.pages \"Accesses via browser\"\n        admin -&gt; portal.webFrontend.pages \"Administers via browser\"\n        portal.oauth2Proxy -&gt; entra \"Authenticates requests against\" \"SSO\"\n        tre -&gt; portal.nginx \"Accesses /tre/api for data retrieval\" \"REST/JSON\"\n        uclSystem -&gt; portal.nginx \"Accesses api for data retrieval\" \"REST/JSON\"\n    }\n\n    views {\n\n        systemContext portal \"C1-Portal_Context\" {\n            include *\n            description \"Context diagram showing how the Research Platform fits within the broader environment.\"\n        }\n\n        container portal \"C2-Portal_Containers\" {\n            include *\n            description \"Container view showing major services running in Kubernetes, including API, frontend, proxy, and DB.\"\n        }\n\n        component portal.api \"C3-Web_API_Internals\" {\n            include *\n            description \"Component view showing key service components inside the API backend.\"\n        }\n\n        component portal.webFrontend \"C3-Web_Frontend_Internals\" {\n            include *\n            description \"Component view showing the UI modules and OpenAPI client.\"\n        }\n\n        component portal.deploy \"C3-Deployment_Workflow\" {\n            include *\n            description \"Component view showing how CI/CD is managed using GitHub Actions and Terraform.\"\n        }\n\n        styles {\n            element \"Person\" {\n                shape person\n                background #08427b\n                color #ffffff\n            }\n\n            element \"Software System\" {\n                background #1168bd\n                color #ffffff\n            }\n\n            element \"Container\" {\n                background #438dd5\n                color #ffffff\n            }\n\n            element \"Component\" {\n                background #85bbf0\n                color #000000\n            }\n\n            element \"Existing System\" {\n                background #999999\n            }\n\n            element \"Group:K8S cluster\" {\n                color #d86613\n                icon https://static.structurizr.com/themes/amazon-web-services-2020.04.30/amazon-elastic-kubernetes-service.png\n            }\n        }\n    }\n}"
  },
  {
    "objectID": "calm/index.html#problems",
    "href": "calm/index.html#problems",
    "title": "CALM: Architecture-as-Code",
    "section": "Problems",
    "text": "Problems\nc4model.com:\n\nInconsistent notation (colour coding, shapes, line styles, etc)\nAmbiguous naming\nUnlabelled relationships\nGeneric terminology\nMissing technology choices\nMixed abstractions\nNot good at communicating architecture"
  },
  {
    "objectID": "calm/index.html#section-1",
    "href": "calm/index.html#section-1",
    "title": "CALM: Architecture-as-Code",
    "section": "",
    "text": "Common pitfalls:\n\nInconsistent notation (colour coding, shapes, line styles, etc.)\nAmbiguous naming\nUnlabelled relationships\nGeneric terminology\nMissing technology choices\nMixed abstractions\nNot good at communicating architecture"
  },
  {
    "objectID": "calm/index.html#workflow-.incrementalfalse",
    "href": "calm/index.html#workflow-.incrementalfalse",
    "title": "CALM: Architecture-as-Code",
    "section": "Workflow {.incremental=false}",
    "text": "Workflow {.incremental=false}\n\nCreate views\n\nworkspace \"ARC Services Portal\" \"Models the architecture of a research services web portal\" {\n\n    !identifiers hierarchical\n\n    ...\n\n    views {\n\n        systemContext portal \"C1-Portal_Context\" {\n            include *\n            description \"Context diagram showing how the Research Platform fits within the broader environment.\"\n        }\n\n        container portal \"C2-Portal_Containers\" {\n            include *\n            description \"Container view showing major services running in Kubernetes, including API, frontend, proxy, and DB.\"\n        }\n\n        component portal.api \"C3-Web_API_Internals\" {\n            include *\n            description \"Component view showing key service components inside the API backend.\"\n        }\n\n        component portal.webFrontend \"C3-Web_Frontend_Internals\" {\n            include *\n            description \"Component view showing the UI modules and OpenAPI client.\"\n        }\n\n        component portal.deploy \"C3-Deployment_Workflow\" {\n            include *\n            description \"Component view showing how CI/CD is managed using GitHub Actions and Terraform.\"\n        }\n\n        styles {\n            element \"Person\" {\n                shape person\n                background #08427b\n                color #ffffff\n            }\n\n            element \"Software System\" {\n                background #1168bd\n                color #ffffff\n            }\n\n            element \"Container\" {\n                background #438dd5\n                color #ffffff\n            }\n\n            element \"Component\" {\n                background #85bbf0\n                color #000000\n            }\n\n            element \"Existing System\" {\n                background #999999\n            }\n\n            element \"Group:K8S cluster\" {\n                color #d86613\n                icon https://static.structurizr.com/themes/amazon-web-services-2020.04.30/amazon-elastic-kubernetes-service.png\n            }\n        }\n    }\n}\n}\n:::"
  },
  {
    "objectID": "calm/index.html#workflows",
    "href": "calm/index.html#workflows",
    "title": "CALM: Architecture-as-Code",
    "section": "Workflows",
    "text": "Workflows\n\nApply styles\n\nworkspace \"ARC Services Portal\" \"Models the architecture of a research services web portal\" {\n\n    !identifiers hierarchical\n\n    model {\n\n        properties {\n            \"structurizr.groupSeparator\" \"/\"\n        }\n\n        user = person \"Researcher\" \"Uses the platform to manage their research profile and data.\"\n        admin = person \"Admin\" \"Portal user with elevated permissions to edit data or review submissions.\"\n\n        entra = softwareSystem \"Microsoft Entra\" \"Identity provider (SSO)\" \"Existing System\"\n        tre = softwareSystem \"TRE\" \"Secure processing environment for sensitive research data\" \"Existing System\"\n        ghcr = softwareSystem \"GitHub Container Registry\" \"Stores container images\" \"Existing System\"\n        uclSystem = softwareSystem \"...\" \"Other UCL consumer of portal data\" \"Existing System\"\n\n        portal = softwareSystem \"ARC Services Portal\" \"Enables management of Studies, Projects, user training and information governance\" {\n\n            group \"K8S cluster\" {\n\n                api = container \"API\" \"API backend with /web/api and /tre/api (and other) endpoints\" \"Go\" {\n\n                    group \"Shared Services\" {\n                        projectService = component \"Project Service\" \"Handles project workflows\" \"Go\"\n                        userService = component \"User Service\" \"Handles user workflows\" \"Go\"\n                        otherService = component \"...\" \"Other backend services\" \"Go\"\n                    }\n\n                    group \"Web API\" {\n                        webhttpHandlers = component \"HTTP Handlers for web frontend\" \"Handles REST endpoints\" \"Go\"\n                        webhttpHandlers -&gt; userService \"Calls\"\n                        webhttpHandlers -&gt; projectService \"Calls\"\n                        webhttpHandlers -&gt; otherService \"Calls\"\n                    }\n\n                    group \"TRE API\" {\n                        trehttpHandlers = component \"HTTP Handlers for UCL TREs\" \"Handles REST endpoints\" \"Go\"\n                        trehttpHandlers -&gt; userService \"Calls\"\n                        trehttpHandlers -&gt; projectService \"Calls\"\n                        trehttpHandlers -&gt; otherService \"Calls\"\n                    }\n\n                    group \"Other API\" {\n                        otherhttpHandlers = component \"HTTP Handlers for other UCL systems\" \"Handles REST endpoints\" \"Go\"\n                        otherhttpHandlers -&gt; otherService \"Calls\"\n                    }\n                }\n\n                webFrontend = container \"Web Frontend\" \"User-facing web app\" \"React, TypeScript\" {\n                    pages = component \"Pages\" \"UCL Design System-styled pages for profile, studies, projects\" \"React\"\n                    apiClient = component \"API Client\" \"Generated from OpenAPI spec\" \"TypeScript\"\n\n                    pages -&gt; apiClient \"Calls\"\n                }\n\n                oauth2Proxy = container \"OAuth2 Proxy\" \"Proxy providing OAuth2 authentication\" \"quay.io/oauth2-proxy/oauth2-proxy\"\n\n                nginx = container \"Reverse Proxy\" \"Routes requests to frontend and backend\" \"nginx\"\n\n                postgres = container \"Database\" \"Stores user, project, portal etc. data\" \"PostgreSQL\"\n\n                api.projectService -&gt; postgres \"Reads/writes data\"\n                api.userService -&gt; postgres \"Reads/writes data\"\n                api.otherService -&gt; postgres \"Read/writes data\"\n                nginx -&gt; api.trehttpHandlers \"Proxies /tre/api requests\"\n                nginx -&gt; api.otherhttpHandlers \"Proxies other api requests\"\n                nginx -&gt; webFrontend.pages \"Serves\"\n                webFrontend.apiClient -&gt; oauth2Proxy \"Forwards /web/api requests for authentication\"\n                oauth2Proxy -&gt; api.webhttpHandlers \"Forwards authenticated /web/api requests to backend\"\n\n            }\n\n            deploy = container \"CI/CD Pipeline\" \"Builds and deploys infrastructure and app\" \"GitHub Actions + Terraform\" {\n\n                group \"Portal App Repository\" {\n                    gha_portal = component \"GitHub Actions (Portal Repo)\" \"Builds & pushes container images\" \"GitHub Actions\"\n                }\n\n                group \"Infrastructure Repository\" {\n                    gha_infra = component \"GitHub Actions (Infra Repo)\" \"Applies Terraform in AWS\" \"GitHub Actions\"\n                    tf = component \"Terraform Code\" \"Defines and provisions cloud infra\" \"Terraform\"\n                    gha_infra -&gt; tf \"Runs\"\n                }\n            }\n\n            portal.deploy.tf -&gt; ghcr \"Pulls images for deployment\"\n            portal.deploy.gha_portal -&gt; ghcr \"Pushes container images\"\n        }\n\n        user -&gt; portal.webFrontend.pages \"Accesses via browser\"\n        admin -&gt; portal.webFrontend.pages \"Administers via browser\"\n        portal.oauth2Proxy -&gt; entra \"Authenticates requests against\" \"SSO\"\n        tre -&gt; portal.nginx \"Accesses /tre/api for data retrieval\" \"REST/JSON\"\n        uclSystem -&gt; portal.nginx \"Accesses api for data retrieval\" \"REST/JSON\"\n    }\n\n    views {\n\n        systemContext portal \"C1-Portal_Context\" {\n            include *\n            description \"Context diagram showing how the Research Platform fits within the broader environment.\"\n        }\n\n        container portal \"C2-Portal_Containers\" {\n            include *\n            description \"Container view showing major services running in Kubernetes, including API, frontend, proxy, and DB.\"\n        }\n\n        component portal.api \"C3-Web_API_Internals\" {\n            include *\n            description \"Component view showing key service components inside the API backend.\"\n        }\n\n        component portal.webFrontend \"C3-Web_Frontend_Internals\" {\n            include *\n            description \"Component view showing the UI modules and OpenAPI client.\"\n        }\n\n        component portal.deploy \"C3-Deployment_Workflow\" {\n            include *\n            description \"Component view showing how CI/CD is managed using GitHub Actions and Terraform.\"\n        }\n\n        styles {\n            element \"Person\" {\n                shape person\n                background #08427b\n                color #ffffff\n            }\n\n            element \"Software System\" {\n                background #1168bd\n                color #ffffff\n            }\n\n            element \"Container\" {\n                background #438dd5\n                color #ffffff\n            }\n\n            element \"Component\" {\n                background #85bbf0\n                color #000000\n            }\n\n            element \"Existing System\" {\n                background #999999\n            }\n\n            element \"Group:K8S cluster\" {\n                color #d86613\n                icon https://static.structurizr.com/themes/amazon-web-services-2020.04.30/amazon-elastic-kubernetes-service.png\n            }\n        }\n    }\n}"
  },
  {
    "objectID": "calm/index.html#workflows-1",
    "href": "calm/index.html#workflows-1",
    "title": "CALM: Architecture-as-Code",
    "section": "Workflows",
    "text": "Workflows\n\nExport images\n\n\ndocker pull structurizr/lite\ndocker run -it --rm -p 8080:8080 -v PATH:/usr/local/structurizr structurizr/lite"
  },
  {
    "objectID": "calm/index.html#how-does-calm-fit-in",
    "href": "calm/index.html#how-does-calm-fit-in",
    "title": "CALM: Architecture-as-Code",
    "section": "How does CALM fit in?",
    "text": "How does CALM fit in?\n\nIt does not replace the C4 model, it complements it"
  },
  {
    "objectID": "calm/index.html#comparison",
    "href": "calm/index.html#comparison",
    "title": "CALM: Architecture-as-Code",
    "section": "Comparison",
    "text": "Comparison\n\n\nC4 Model\n\nA set of hierarchical abstractions - software systems, containers, components, and code.\nA set of hierarchical diagrams - system context, containers, components, and code.\nNotation independent.\nTooling independent.\n\n\nCALM\n\nA JSON Meta Schema to define your architecture\nA CLI for generating, validating, docifying architectures\nA UI for visualising architectures\ni.e. provides notation rules and tools"
  },
  {
    "objectID": "calm/index.html#workflow-3",
    "href": "calm/index.html#workflow-3",
    "title": "CALM: Architecture-as-Code",
    "section": "Workflow",
    "text": "Workflow\n\nGenerate and export images\n\n\ndocker pull structurizr/lite\ndocker run -it --rm -p 8080:8080 -v PATH:/usr/local/structurizr structurizr/lite"
  },
  {
    "objectID": "calm/index.html#c4-comparison",
    "href": "calm/index.html#c4-comparison",
    "title": "CALM: Architecture-as-Code",
    "section": "C4 Comparison",
    "text": "C4 Comparison\n\n\nC4 Model\n\nA set of hierarchical abstractions - software systems, containers, components, and code.\nDiagrams - system context, containers, components (and code)\nNotation independent\nTooling independent\n\n\nCALM\n\nA JSON Meta Schema to define your architecture\nA CLI for generating, validating, docifying architectures\nA UI for visualising architectures\nProvides the notation and tooling C4 is agnostic about"
  },
  {
    "objectID": "calm/index.html#workflow-.incrementalfalse-data-menu-titleworkflow-ii",
    "href": "calm/index.html#workflow-.incrementalfalse-data-menu-titleworkflow-ii",
    "title": "CALM: Architecture-as-Code",
    "section": "Workflow {.incremental=false data-menu-title=“Workflow (ii)”}",
    "text": "Workflow {.incremental=false data-menu-title=“Workflow (ii)”}\n\nCreate views\n\nworkspace \"ARC Services Portal\" \"Models the architecture of a research services web portal\" {\n\n    !identifiers hierarchical\n\n    model {\n\n        properties {\n            \"structurizr.groupSeparator\" \"/\"\n        }\n\n        user = person \"Researcher\" \"Uses the platform to manage their research profile and data.\"\n        admin = person \"Admin\" \"Portal user with elevated permissions to edit data or review submissions.\"\n\n        entra = softwareSystem \"Microsoft Entra\" \"Identity provider (SSO)\" \"Existing System\"\n        tre = softwareSystem \"TRE\" \"Secure processing environment for sensitive research data\" \"Existing System\"\n        ghcr = softwareSystem \"GitHub Container Registry\" \"Stores container images\" \"Existing System\"\n        uclSystem = softwareSystem \"...\" \"Other UCL consumer of portal data\" \"Existing System\"\n\n        portal = softwareSystem \"ARC Services Portal\" \"Enables management of Studies, Projects, user training and information governance\" {\n\n            group \"K8S cluster\" {\n\n                api = container \"API\" \"API backend with /web/api and /tre/api (and other) endpoints\" \"Go\" {\n\n                    group \"Shared Services\" {\n                        projectService = component \"Project Service\" \"Handles project workflows\" \"Go\"\n                        userService = component \"User Service\" \"Handles user workflows\" \"Go\"\n                        otherService = component \"...\" \"Other backend services\" \"Go\"\n                    }\n\n                    group \"Web API\" {\n                        webhttpHandlers = component \"HTTP Handlers for web frontend\" \"Handles REST endpoints\" \"Go\"\n                        webhttpHandlers -&gt; userService \"Calls\"\n                        webhttpHandlers -&gt; projectService \"Calls\"\n                        webhttpHandlers -&gt; otherService \"Calls\"\n                    }\n\n                    group \"TRE API\" {\n                        trehttpHandlers = component \"HTTP Handlers for UCL TREs\" \"Handles REST endpoints\" \"Go\"\n                        trehttpHandlers -&gt; userService \"Calls\"\n                        trehttpHandlers -&gt; projectService \"Calls\"\n                        trehttpHandlers -&gt; otherService \"Calls\"\n                    }\n\n                    group \"Other API\" {\n                        otherhttpHandlers = component \"HTTP Handlers for other UCL systems\" \"Handles REST endpoints\" \"Go\"\n                        otherhttpHandlers -&gt; otherService \"Calls\"\n                    }\n                }\n\n                webFrontend = container \"Web Frontend\" \"User-facing web app\" \"React, TypeScript\" {\n                    pages = component \"Pages\" \"UCL Design System-styled pages for profile, studies, projects\" \"React\"\n                    apiClient = component \"API Client\" \"Generated from OpenAPI spec\" \"TypeScript\"\n\n                    pages -&gt; apiClient \"Calls\"\n                }\n\n                oauth2Proxy = container \"OAuth2 Proxy\" \"Proxy providing OAuth2 authentication\" \"quay.io/oauth2-proxy/oauth2-proxy\"\n\n                nginx = container \"Reverse Proxy\" \"Routes requests to frontend and backend\" \"nginx\"\n\n                postgres = container \"Database\" \"Stores user, project, portal etc. data\" \"PostgreSQL\"\n\n                api.projectService -&gt; postgres \"Reads/writes data\"\n                api.userService -&gt; postgres \"Reads/writes data\"\n                api.otherService -&gt; postgres \"Read/writes data\"\n                nginx -&gt; api.trehttpHandlers \"Proxies /tre/api requests\"\n                nginx -&gt; api.otherhttpHandlers \"Proxies other api requests\"\n                nginx -&gt; webFrontend.pages \"Serves\"\n                webFrontend.apiClient -&gt; oauth2Proxy \"Forwards /web/api requests for authentication\"\n                oauth2Proxy -&gt; api.webhttpHandlers \"Forwards authenticated /web/api requests to backend\"\n\n            }\n\n            deploy = container \"CI/CD Pipeline\" \"Builds and deploys infrastructure and app\" \"GitHub Actions + Terraform\" {\n\n                group \"Portal App Repository\" {\n                    gha_portal = component \"GitHub Actions (Portal Repo)\" \"Builds & pushes container images\" \"GitHub Actions\"\n                }\n\n                group \"Infrastructure Repository\" {\n                    gha_infra = component \"GitHub Actions (Infra Repo)\" \"Applies Terraform in AWS\" \"GitHub Actions\"\n                    tf = component \"Terraform Code\" \"Defines and provisions cloud infra\" \"Terraform\"\n                    gha_infra -&gt; tf \"Runs\"\n                }\n            }\n\n            portal.deploy.tf -&gt; ghcr \"Pulls images for deployment\"\n            portal.deploy.gha_portal -&gt; ghcr \"Pushes container images\"\n        }\n\n        user -&gt; portal.webFrontend.pages \"Accesses via browser\"\n        admin -&gt; portal.webFrontend.pages \"Administers via browser\"\n        portal.oauth2Proxy -&gt; entra \"Authenticates requests against\" \"SSO\"\n        tre -&gt; portal.nginx \"Accesses /tre/api for data retrieval\" \"REST/JSON\"\n        uclSystem -&gt; portal.nginx \"Accesses api for data retrieval\" \"REST/JSON\"\n    }\n\n    views {\n\n        systemContext portal \"C1-Portal_Context\" {\n            include *\n            description \"Context diagram showing how the Research Platform fits within the broader environment.\"\n        }\n\n        container portal \"C2-Portal_Containers\" {\n            include *\n            description \"Container view showing major services running in Kubernetes, including API, frontend, proxy, and DB.\"\n        }\n\n        component portal.api \"C3-Web_API_Internals\" {\n            include *\n            description \"Component view showing key service components inside the API backend.\"\n        }\n\n        component portal.webFrontend \"C3-Web_Frontend_Internals\" {\n            include *\n            description \"Component view showing the UI modules and OpenAPI client.\"\n        }\n\n        component portal.deploy \"C3-Deployment_Workflow\" {\n            include *\n            description \"Component view showing how CI/CD is managed using GitHub Actions and Terraform.\"\n        }\n\n        styles {\n            element \"Person\" {\n                shape person\n                background #08427b\n                color #ffffff\n            }\n\n            element \"Software System\" {\n                background #1168bd\n                color #ffffff\n            }\n\n            element \"Container\" {\n                background #438dd5\n                color #ffffff\n            }\n\n            element \"Component\" {\n                background #85bbf0\n                color #000000\n            }\n\n            element \"Existing System\" {\n                background #999999\n            }\n\n            element \"Group:K8S cluster\" {\n                color #d86613\n                icon https://static.structurizr.com/themes/amazon-web-services-2020.04.30/amazon-elastic-kubernetes-service.png\n            }\n        }\n    }\n}"
  },
  {
    "objectID": "calm/index.html#architecture-ailments",
    "href": "calm/index.html#architecture-ailments",
    "title": "CALM: Architecture-as-Code",
    "section": "Architecture ailments",
    "text": "Architecture ailments\n\nInconsistent notation (colour coding, shapes, line styles, etc.)\nAmbiguous naming\nUnlabelled relationships\nGeneric terminology\nMissing technology choices\nMixed abstractions\nNot good at communicating architecture"
  },
  {
    "objectID": "calm/index.html#rationale-1",
    "href": "calm/index.html#rationale-1",
    "title": "CALM: Architecture-as-Code",
    "section": "Rationale",
    "text": "Rationale\n\nInconsistent notation (colour coding, shapes, line styles, etc.)\nAmbiguous naming\nUnlabelled relationships\nGeneric terminology\nMissing technology choices\nMixed abstractions\nNot good for communicating architecture"
  },
  {
    "objectID": "calm/index.html#before-we-test-those-claims",
    "href": "calm/index.html#before-we-test-those-claims",
    "title": "CALM: Architecture-as-Code",
    "section": "Before we test those claims…",
    "text": "Before we test those claims…\n\n\nCast your minds back"
  },
  {
    "objectID": "calm/index.html#recap",
    "href": "calm/index.html#recap",
    "title": "CALM: Architecture-as-Code",
    "section": "Recap",
    "text": "Recap"
  },
  {
    "objectID": "calm/index.html#arc-services-portal-1",
    "href": "calm/index.html#arc-services-portal-1",
    "title": "CALM: Architecture-as-Code",
    "section": "ARC Services Portal",
    "text": "ARC Services Portal"
  },
  {
    "objectID": "calm/index.html#calms-superpower",
    "href": "calm/index.html#calms-superpower",
    "title": "CALM: Architecture-as-Code",
    "section": "CALM’s superpower",
    "text": "CALM’s superpower\nPatterns! Through the use of the CALM CLI:\n\nUsage: calm [options] [command]\n\nA set of tools for interacting with the Common Architecture Language Model (CALM)\n\nOptions:\n  -V, --version       output the version number\n  -h, --help          display help for command\n\nCommands:\n  generate [options]  Generate an architecture from a CALM pattern file.\n  validate [options]  Validate that an architecture conforms to a given CALM pattern.\n  docify [options]    Generate a documentation website off your CALM model\n  help [command]      display help for command"
  },
  {
    "objectID": "calm/index.html#first-create-a-pattern",
    "href": "calm/index.html#first-create-a-pattern",
    "title": "CALM: Architecture-as-Code",
    "section": "First Create a Pattern",
    "text": "First Create a Pattern\n\nIn CALM, patterns are custom JSON schemas which adheres to the core CALM Meta Schema (which itself adheres to the official JSON Schema Draft 2020-12):\n\n\nTake, for example… Consumer Pattern 3: Enterprise API to System: Synchronous\n\n\n{\n  \"$schema\": \"https://calm.finos.org/release/1.0/meta/calm.json\",\n  \"title\": \"Consumer Pattern 3\",\n  \"type\": \"object\",\n  \"$defs\": {\n    \"node-base\": {\n      \"$ref\": \"https://calm.finos.org/release/1.0/meta/core.json#/defs/node\"\n    },\n    \"relationship-base\": {\n      \"$ref\": \"https://calm.finos.org/release/1.0/meta/core.json#/defs/relationship\"\n    }\n  },\n  \"properties\": {\n    \"nodes\": {\n      \"type\": \"array\",\n      \"minItems\": 5,\n      \"prefixItems\": [\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that triggers a Scheduled Event\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"Trigger\" },\n            \"unique-id\": { \"const\": \"trigger\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that sends request to the Enterprise API when it is triggered\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"'Fetch from System' Connector\" },\n            \"unique-id\": { \"const\": \"fetch-from-system-connector\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that converts payload to System Data Model\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"Processing\" },\n            \"unique-id\": { \"const\": \"processing\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that initiates connection to System and sends payload over it\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"'Send to System' Connector\" },\n            \"unique-id\": { \"const\": \"send-to-system-connector\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Target System\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"Target System\" },\n            \"unique-id\": { \"const\": \"target-system\" }\n          }\n        }\n      ]\n    },\n    \"relationships\": {\n      \"type\": \"array\",\n      \"minItems\": 4,\n      \"prefixItems\": [\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"event-trigger\" },\n            \"description\": { \"const\": \"Scheduled event triggers API request\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"trigger\" },\n                  \"destination\": { \"node\": \"fetch-from-system-connector\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" },\n            \"authentication\": { \"const\": \"OAuth2\" },\n            \"controls\": {\n              \"$ref\": \"https://calm.finos.org/release/1.0/meta/control.json#/defs/controls\",\n              \"properties\": {\n                \"encryption\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"description\": {\n                      \"const\": \"Encryption controls for data in transit\"\n                    },\n                    \"requirements\": {\n                      \"type\": \"array\",\n                      \"minItems\": 1,\n                      \"prefixItems\": [\n                        {\n                          \"$ref\": \"https://calm.finos.org/release/1.0/meta/control.json#/defs/control-detail\",\n                          \"properties\": {\n                            \"requirement-url\": {\n                              \"const\": \"/home/fbacon/CALM/demo/requirements/encryption-in-transit-requirement.json\"\n                            },\n                            \"config-url\": {\n                              \"const\": \"/home/fbacon/CALM/demo/configs/encryption-in-transit-config.json\"\n                            }\n                          },\n                          \"required\": [\"config-url\"]\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\": [\"controls\"]\n        },\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"publish-response\" },\n            \"description\": { \"const\": \"Publishes response payload for processing\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"fetch-from-system-connector\" },\n                  \"destination\": { \"node\": \"processing\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"processing complete\" },\n            \"description\": { \"const\": \"Publishes transformed payload to 'Send to System' Connector\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"processing\" },\n                  \"destination\": { \"node\": \"send-to-system-connector\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"payload-to-system\" },\n            \"description\": { \"const\": \"Initiates connection to System and sends payload over it\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"send-to-system-connector\" },\n                  \"destination\": { \"node\": \"target-system\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" }\n          }\n        }\n      ]\n    }\n  },\n  \"required\": [\"nodes\", \"relationships\"]\n}"
  },
  {
    "objectID": "calm/index.html#creating-a-pattern",
    "href": "calm/index.html#creating-a-pattern",
    "title": "CALM: Architecture-as-Code",
    "section": "Creating a Pattern",
    "text": "Creating a Pattern\n\nIn CALM, patterns are custom JSON schemas which adhere to the core CALM Meta Schema\n\n\n{\n  \"$schema\": \"https://calm.finos.org/release/1.0/meta/calm.json\",\n  \"title\": \"Consumer Pattern 3\",\n  \"type\": \"object\",\n  \"$defs\": {\n    \"node-base\": {\n      \"$ref\": \"https://calm.finos.org/release/1.0/meta/core.json#/defs/node\"\n    },\n    \"relationship-base\": {\n      \"$ref\": \"https://calm.finos.org/release/1.0/meta/core.json#/defs/relationship\"\n    }\n  },\n  \"properties\": {\n    \"nodes\": {\n      \"type\": \"array\",\n      \"minItems\": 5,\n      \"prefixItems\": [\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that triggers a Scheduled Event\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"Trigger\" },\n            \"unique-id\": { \"const\": \"trigger\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that sends request to the Enterprise API when it is triggered\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"'Fetch from System' Connector\" },\n            \"unique-id\": { \"const\": \"fetch-from-system-connector\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that converts payload to System Data Model\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"Processing\" },\n            \"unique-id\": { \"const\": \"processing\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that initiates connection to System and sends payload over it\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"'Send to System' Connector\" },\n            \"unique-id\": { \"const\": \"send-to-system-connector\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Target System\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"Target System\" },\n            \"unique-id\": { \"const\": \"target-system\" }\n          }\n        }\n      ]\n    },\n    \"relationships\": {\n      \"type\": \"array\",\n      \"minItems\": 4,\n      \"prefixItems\": [\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"event-trigger\" },\n            \"description\": { \"const\": \"Scheduled event triggers API request\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"trigger\" },\n                  \"destination\": { \"node\": \"fetch-from-system-connector\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" },\n            \"authentication\": { \"const\": \"OAuth2\" },\n            \"controls\": {\n              \"$ref\": \"https://calm.finos.org/release/1.0/meta/control.json#/defs/controls\",\n              \"properties\": {\n                \"encryption\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"description\": {\n                      \"const\": \"Encryption controls for data in transit\"\n                    },\n                    \"requirements\": {\n                      \"type\": \"array\",\n                      \"minItems\": 1,\n                      \"prefixItems\": [\n                        {\n                          \"$ref\": \"https://calm.finos.org/release/1.0/meta/control.json#/defs/control-detail\",\n                          \"properties\": {\n                            \"requirement-url\": {\n                              \"const\": \"/home/fbacon/CALM/demo/requirements/encryption-in-transit-requirement.json\"\n                            },\n                            \"config-url\": {\n                              \"const\": \"/home/fbacon/CALM/demo/configs/encryption-in-transit-config.json\"\n                            }\n                          }\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\": [\"controls\"]\n        },\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"publish-response\" },\n            \"description\": { \"const\": \"Publishes response payload for processing\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"fetch-from-system-connector\" },\n                  \"destination\": { \"node\": \"processing\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"processing complete\" },\n            \"description\": { \"const\": \"Publishes transformed payload to 'Send to System' Connector\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"processing\" },\n                  \"destination\": { \"node\": \"send-to-system-connector\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"payload-to-system\" },\n            \"description\": { \"const\": \"Initiates connection to System and sends payload over it\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"send-to-system-connector\" },\n                  \"destination\": { \"node\": \"target-system\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" }\n          }\n        }\n      ]\n    }\n  },\n  \"required\": [\"nodes\", \"relationships\"]\n}"
  },
  {
    "objectID": "calm/index.html#patterns-in-calm",
    "href": "calm/index.html#patterns-in-calm",
    "title": "CALM: Architecture-as-Code",
    "section": "Patterns in CALM",
    "text": "Patterns in CALM\n\nIn CALM, patterns are custom JSON schemas which adhere to the core CALM Meta Schema\n\n\n{\n  \"$schema\": \"https://calm.finos.org/release/1.0/meta/calm.json\",\n  \"title\": \"Consumer Pattern 3\",\n  \"type\": \"object\",\n  \"$defs\": {\n    \"node-base\": {\n      \"$ref\": \"https://calm.finos.org/release/1.0/meta/core.json#/defs/node\"\n    },\n    \"relationship-base\": {\n      \"$ref\": \"https://calm.finos.org/release/1.0/meta/core.json#/defs/relationship\"\n    }\n  },\n  \"properties\": {\n    \"nodes\": {\n      \"type\": \"array\",\n      \"minItems\": 5,\n      \"prefixItems\": [\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that triggers a Scheduled Event\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"Trigger\" },\n            \"unique-id\": { \"const\": \"trigger\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that sends request to the Enterprise API when it is triggered\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"'Fetch from System' Connector\" },\n            \"unique-id\": { \"const\": \"fetch-from-system-connector\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that converts payload to System Data Model\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"Processing\" },\n            \"unique-id\": { \"const\": \"processing\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that initiates connection to System and sends payload over it\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"'Send to System' Connector\" },\n            \"unique-id\": { \"const\": \"send-to-system-connector\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Target System\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"Target System\" },\n            \"unique-id\": { \"const\": \"target-system\" }\n          }\n        }\n      ]\n    },\n    \"relationships\": {\n      \"type\": \"array\",\n      \"minItems\": 4,\n      \"prefixItems\": [\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"event-trigger\" },\n            \"description\": { \"const\": \"Scheduled event triggers API request\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"trigger\" },\n                  \"destination\": { \"node\": \"fetch-from-system-connector\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" },\n            \"authentication\": { \"const\": \"OAuth2\" },\n            \"controls\": {\n              \"$ref\": \"https://calm.finos.org/release/1.0/meta/control.json#/defs/controls\",\n              \"properties\": {\n                \"encryption\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"description\": {\n                      \"const\": \"Encryption controls for data in transit\"\n                    },\n                    \"requirements\": {\n                      \"type\": \"array\",\n                      \"minItems\": 1,\n                      \"prefixItems\": [\n                        {\n                          \"$ref\": \"https://calm.finos.org/release/1.0/meta/control.json#/defs/control-detail\",\n                          \"properties\": {\n                            \"requirement-url\": {\n                              \"const\": \"/home/fbacon/CALM/demo/requirements/encryption-in-transit-requirement.json\"\n                            },\n                            \"config-url\": {\n                              \"const\": \"/home/fbacon/CALM/demo/configs/encryption-in-transit-config.json\"\n                            }\n                          }\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\": [\"controls\"]\n        },\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"publish-response\" },\n            \"description\": { \"const\": \"Publishes response payload for processing\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"fetch-from-system-connector\" },\n                  \"destination\": { \"node\": \"processing\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"processing complete\" },\n            \"description\": { \"const\": \"Publishes transformed payload to 'Send to System' Connector\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"processing\" },\n                  \"destination\": { \"node\": \"send-to-system-connector\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"payload-to-system\" },\n            \"description\": { \"const\": \"Initiates connection to System and sends payload over it\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"send-to-system-connector\" },\n                  \"destination\": { \"node\": \"target-system\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" }\n          }\n        }\n      ]\n    }\n  },\n  \"required\": [\"nodes\", \"relationships\"]\n}"
  },
  {
    "objectID": "calm/index.html#controls-in-patterns",
    "href": "calm/index.html#controls-in-patterns",
    "title": "CALM: Architecture-as-Code",
    "section": "Controls in Patterns",
    "text": "Controls in Patterns\n\nYou can include a control requirement-url and a control config-url\n\n\n{\n  \"$schema\": \"https://calm.finos.org/release/1.0/meta/calm.json\",\n  \"title\": \"Consumer Pattern 3\",\n  \"type\": \"object\",\n  \"$defs\": {\n    \"node-base\": {\n      \"$ref\": \"https://calm.finos.org/release/1.0/meta/core.json#/defs/node\"\n    },\n    \"relationship-base\": {\n      \"$ref\": \"https://calm.finos.org/release/1.0/meta/core.json#/defs/relationship\"\n    }\n  },\n  \"properties\": {\n    \"nodes\": {\n      \"type\": \"array\",\n      \"minItems\": 5,\n      \"prefixItems\": [\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that triggers a Scheduled Event\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"Trigger\" },\n            \"unique-id\": { \"const\": \"trigger\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that sends request to the Enterprise API when it is triggered\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"'Fetch from System' Connector\" },\n            \"unique-id\": { \"const\": \"fetch-from-system-connector\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that converts payload to System Data Model\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"Processing\" },\n            \"unique-id\": { \"const\": \"processing\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that initiates connection to System and sends payload over it\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"'Send to System' Connector\" },\n            \"unique-id\": { \"const\": \"send-to-system-connector\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Target System\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"Target System\" },\n            \"unique-id\": { \"const\": \"target-system\" }\n          }\n        }\n      ]\n    },\n    \"relationships\": {\n      \"type\": \"array\",\n      \"minItems\": 4,\n      \"prefixItems\": [\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"event-trigger\" },\n            \"description\": { \"const\": \"Scheduled event triggers API request\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"trigger\" },\n                  \"destination\": { \"node\": \"fetch-from-system-connector\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" },\n            \"authentication\": { \"const\": \"OAuth2\" },\n            \"controls\": {\n              \"$ref\": \"https://calm.finos.org/release/1.0/meta/control.json#/defs/controls\",\n              \"properties\": {\n                \"encryption\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"description\": {\n                      \"const\": \"Encryption controls for data in transit\"\n                    },\n                    \"requirements\": {\n                      \"type\": \"array\",\n                      \"minItems\": 1,\n                      \"prefixItems\": [\n                        {\n                          \"$ref\": \"https://calm.finos.org/release/1.0/meta/control.json#/defs/control-detail\",\n                          \"properties\": {\n                            \"requirement-url\": {\n                              \"const\": \"/home/fbacon/CALM/demo/requirements/encryption-in-transit-requirement.json\"\n                            },\n                            \"config-url\": {\n                              \"const\": \"/home/fbacon/CALM/demo/configs/encryption-in-transit-config.json\"\n                            }\n                          }\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\": [\"controls\"]\n        },\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"publish-response\" },\n            \"description\": { \"const\": \"Publishes response payload for processing\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"fetch-from-system-connector\" },\n                  \"destination\": { \"node\": \"processing\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"processing complete\" },\n            \"description\": { \"const\": \"Publishes transformed payload to 'Send to System' Connector\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"processing\" },\n                  \"destination\": { \"node\": \"send-to-system-connector\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"payload-to-system\" },\n            \"description\": { \"const\": \"Initiates connection to System and sends payload over it\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"send-to-system-connector\" },\n                  \"destination\": { \"node\": \"target-system\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" }\n          }\n        }\n      ]\n    }\n  },\n  \"required\": [\"nodes\", \"relationships\"]\n}"
  },
  {
    "objectID": "calm/index.html#requirement",
    "href": "calm/index.html#requirement",
    "title": "CALM: Architecture-as-Code",
    "section": "Requirement",
    "text": "Requirement\n\n{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"$id\": \"./requirements/encryption-in-transit.json\",\n  \"title\": \"Encryption in Transit Requirement\",\n  \"description\": \"Ensures that if HTTPS is used, TLS version is declared and must be &gt;=1.2.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"protocol\": {\n      \"type\": \"string\",\n      \"enum\": [\"HTTP\", \"HTTPS\"]\n    },\n    \"tls-version\": {\n      \"type\": \"string\",\n      \"enum\": [\"1.2\", \"1.3\"]\n    }\n  },\n  \"allOf\": [\n    {\n      \"if\": {\n        \"properties\": { \"protocol\": { \"const\": \"HTTPS\" } }\n      },\n      \"then\": {\n        \"required\": [\"tls-version\"]\n      }\n    }\n  ]\n}"
  },
  {
    "objectID": "calm/index.html#config",
    "href": "calm/index.html#config",
    "title": "CALM: Architecture-as-Code",
    "section": "Config",
    "text": "Config\n\n{\n  \"protocol\": \"HTTPS\",\n  \"tls-version\": \"1.0\"\n}"
  },
  {
    "objectID": "calm/code-blocks/core-schema.html",
    "href": "calm/code-blocks/core-schema.html",
    "title": "Finley Bacon",
    "section": "",
    "text": "{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"$id\": \"https://calm.finos.org/release/1.0/meta/core.json\",\n  \"title\": \"Common Architecture Language Model (CALM) Vocab\",\n  \"type\" : \"object\",\n  \"properties\": {\n    \"nodes\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/defs/node\"\n      }\n    },\n    \"relationships\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/defs/relationship\"\n      }\n    },\n    \"metadata\": {\n      \"$ref\": \"#/defs/metadata\"\n    },\n    \"controls\": {\n      \"$ref\": \"control.json#/defs/controls\"\n    },\n    \"flows\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"flow.json#/defs/flow\"\n      }\n    },\n    \"adrs\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"External links to ADRs (Architecture Decision Records) or similar documents that provide context or decisions related to the architecture. These can be URLs or references to internal documentation.\"\n    },\n    \"additionalProperties\": false\n  },\n  \"defs\": {\n    \"node\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"unique-id\": {\n          \"type\": \"string\"\n        },\n        \"node-type\": {\n          \"$ref\": \"#/defs/node-type-definition\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"details\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"detailed-architecture\": {\n              \"type\": \"string\"\n            },\n            \"required-pattern\": {\n              \"type\": \"string\"\n            }\n          },\n          \"additionalProperties\": false\n        },\n        \"interfaces\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"anyOf\": [\n              { \"$ref\": \"interface.json#/defs/interface-definition\" },\n              { \"$ref\": \"interface.json#/defs/interface-type\" }\n            ]\n          }\n        },\n        \"controls\": {\n          \"$ref\": \"control.json#/defs/controls\"\n        },\n        \"metadata\": {\n          \"$ref\": \"#/defs/metadata\"\n        }\n      },\n      \"required\": [\n        \"unique-id\",\n        \"node-type\",\n        \"name\",\n        \"description\"\n      ],\n      \"additionalProperties\": true\n    },\n    \"relationship\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"unique-id\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"relationship-type\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"interacts\": {\n              \"$ref\": \"#/defs/interacts-type\"\n            },\n            \"connects\": {\n              \"$ref\": \"#/defs/connects-type\"\n            },\n            \"deployed-in\": {\n              \"$ref\": \"#/defs/deployed-in-type\"\n            },\n            \"composed-of\": {\n              \"$ref\": \"#/defs/composed-of-type\"\n            },\n            \"options\": {\n              \"$ref\": \"#/defs/option-type\"\n            }\n          },\n          \"oneOf\": [\n            {\n              \"required\": [\n                \"deployed-in\"\n              ]\n            },\n            {\n              \"required\": [\n                \"composed-of\"\n              ]\n            },\n            {\n              \"required\": [\n                \"interacts\"\n              ]\n            },\n            {\n              \"required\": [\n                \"connects\"\n              ]\n            },\n            {\n              \"required\": [\n                \"options\"\n              ]\n            }\n          ]\n        },\n        \"protocol\": {\n          \"$ref\": \"#/defs/protocol\"\n        },\n        \"metadata\": {\n          \"$ref\": \"#/defs/metadata\"\n        },\n        \"controls\": {\n          \"$ref\": \"control.json#/defs/controls\"\n        }\n      },\n      \"required\": [\n        \"unique-id\",\n        \"relationship-type\"\n      ],\n      \"additionalProperties\": true\n    },\n    \"protocol\": {\n      \"enum\": [\n        \"HTTP\",\n        \"HTTPS\",\n        \"FTP\",\n        \"SFTP\",\n        \"JDBC\",\n        \"WebSocket\",\n        \"SocketIO\",\n        \"LDAP\",\n        \"AMQP\",\n        \"TLS\",\n        \"mTLS\",\n        \"TCP\"\n      ]\n    },\n    \"node-type-definition\": {\n      \"anyOf\": [\n        {\n          \"enum\": [\n            \"actor\",\n            \"ecosystem\",\n            \"system\",\n            \"service\",\n            \"database\",\n            \"network\",\n            \"ldap\",\n            \"webclient\",\n            \"data-asset\"\n          ]\n        },\n        {\n          \"type\": \"string\"\n        }\n      ]\n    },\n    \"interacts-type\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"actor\": {\n          \"type\": \"string\"\n        },\n        \"nodes\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"required\": [\n        \"actor\",\n        \"nodes\"\n      ]\n    },\n    \"connects-type\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"source\": {\n          \"$ref\": \"interface.json#/defs/node-interface\"\n        },\n        \"destination\": {\n          \"$ref\": \"interface.json#/defs/node-interface\"\n        }\n      },\n      \"required\": [\n        \"source\",\n        \"destination\"\n      ]\n    },\n    \"deployed-in-type\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"container\": {\n          \"type\": \"string\"\n        },\n        \"nodes\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"required\": [\n        \"container\",\n        \"nodes\"\n      ]\n    },\n    \"composed-of-type\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"container\": {\n          \"type\": \"string\"\n        },\n        \"nodes\": {\n          \"type\": \"array\",\n          \"minItems\": 1,\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"required\": [\n        \"container\",\n        \"nodes\"\n      ]\n    },\n    \"option-type\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/defs/decision\"\n      }\n    },\n    \"decision\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"description\": {\n          \"type\": \"string\"\n        },\n        \"nodes\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"relationships\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"controls\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"required\": [\n        \"description\",\n        \"nodes\",\n        \"relationships\"\n      ]\n    },\n    \"metadata\": {\n      \"oneOf\": [\n        {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\"\n          }\n        },\n        {\n          \"type\": \"object\",\n          \"additionalProperties\": true\n        }\n      ]\n    }\n  }\n}"
  },
  {
    "objectID": "calm/code-blocks/control-requirement.html",
    "href": "calm/code-blocks/control-requirement.html",
    "title": "Finley Bacon",
    "section": "",
    "text": "{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"$id\": \"./requirements/encryption-in-transit.json\",\n  \"title\": \"Encryption in Transit Requirement\",\n  \"description\": \"Ensures that if HTTPS is used, TLS version is declared and must be &gt;=1.2.\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"protocol\": {\n      \"type\": \"string\",\n      \"enum\": [\"HTTP\", \"HTTPS\"]\n    },\n    \"tls-version\": {\n      \"type\": \"string\",\n      \"enum\": [\"1.2\", \"1.3\"]\n    }\n  },\n  \"allOf\": [\n    {\n      \"if\": {\n        \"properties\": { \"protocol\": { \"const\": \"HTTPS\" } }\n      },\n      \"then\": {\n        \"required\": [\"tls-version\"]\n      }\n    }\n  ]\n}"
  },
  {
    "objectID": "calm/code-blocks/cli-validate.html",
    "href": "calm/code-blocks/cli-validate.html",
    "title": "Finley Bacon",
    "section": "",
    "text": "source ~/miniconda3/etc/profile.d/conda.sh && conda activate quarto\ncalm validate -p ../architecture/pattern.json -a ../architecture/architecture.json"
  },
  {
    "objectID": "calm/code-blocks/consumer-pattern-3.html",
    "href": "calm/code-blocks/consumer-pattern-3.html",
    "title": "Finley Bacon",
    "section": "",
    "text": "{\n  \"$schema\": \"https://calm.finos.org/release/1.0/meta/calm.json\",\n  \"title\": \"Consumer Pattern 3\",\n  \"type\": \"object\",\n  \"$defs\": {\n    \"node-base\": {\n      \"$ref\": \"https://calm.finos.org/release/1.0/meta/core.json#/defs/node\"\n    },\n    \"relationship-base\": {\n      \"$ref\": \"https://calm.finos.org/release/1.0/meta/core.json#/defs/relationship\"\n    }\n  },\n  \"properties\": {\n    \"nodes\": {\n      \"type\": \"array\",\n      \"minItems\": 5,\n      \"prefixItems\": [\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that triggers a Scheduled Event\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"Trigger\" },\n            \"unique-id\": { \"const\": \"trigger\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that sends request to the Enterprise API when it is triggered\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"'Fetch from System' Connector\" },\n            \"unique-id\": { \"const\": \"fetch-from-system-connector\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that converts payload to System Data Model\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"Processing\" },\n            \"unique-id\": { \"const\": \"processing\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that initiates connection to System and sends payload over it\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"'Send to System' Connector\" },\n            \"unique-id\": { \"const\": \"send-to-system-connector\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Target System\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"Target System\" },\n            \"unique-id\": { \"const\": \"target-system\" }\n          }\n        }\n      ]\n    },\n    \"relationships\": {\n      \"type\": \"array\",\n      \"minItems\": 4,\n      \"prefixItems\": [\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"event-trigger\" },\n            \"description\": { \"const\": \"Scheduled event triggers API request\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"trigger\" },\n                  \"destination\": { \"node\": \"fetch-from-system-connector\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" },\n            \"authentication\": { \"const\": \"OAuth2\" },\n            \"controls\": {\n              \"$ref\": \"https://calm.finos.org/release/1.0/meta/control.json#/defs/controls\",\n              \"properties\": {\n                \"encryption\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"description\": {\n                      \"const\": \"Encryption controls for data in transit\"\n                    },\n                    \"requirements\": {\n                      \"type\": \"array\",\n                      \"minItems\": 1,\n                      \"prefixItems\": [\n                        {\n                          \"$ref\": \"https://calm.finos.org/release/1.0/meta/control.json#/defs/control-detail\",\n                          \"properties\": {\n                            \"requirement-url\": {\n                              \"const\": \"/home/fbacon/CALM/demo/requirements/encryption-in-transit-requirement.json\"\n                            },\n                            \"config-url\": {\n                              \"const\": \"/home/fbacon/CALM/demo/configs/encryption-in-transit-config.json\"\n                            }\n                          }\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\": [\"controls\"]\n        },\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"publish-response\" },\n            \"description\": { \"const\": \"Publishes response payload for processing\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"fetch-from-system-connector\" },\n                  \"destination\": { \"node\": \"processing\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"processing complete\" },\n            \"description\": { \"const\": \"Publishes transformed payload to 'Send to System' Connector\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"processing\" },\n                  \"destination\": { \"node\": \"send-to-system-connector\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"payload-to-system\" },\n            \"description\": { \"const\": \"Initiates connection to System and sends payload over it\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"send-to-system-connector\" },\n                  \"destination\": { \"node\": \"target-system\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" }\n          }\n        }\n      ]\n    }\n  },\n  \"required\": [\"nodes\", \"relationships\"]\n}"
  },
  {
    "objectID": "calm/code-blocks/consumer-pattern-3-control.html",
    "href": "calm/code-blocks/consumer-pattern-3-control.html",
    "title": "Finley Bacon",
    "section": "",
    "text": "{\n  \"$schema\": \"https://calm.finos.org/release/1.0/meta/calm.json\",\n  \"title\": \"Consumer Pattern 3\",\n  \"type\": \"object\",\n  \"$defs\": {\n    \"node-base\": {\n      \"$ref\": \"https://calm.finos.org/release/1.0/meta/core.json#/defs/node\"\n    },\n    \"relationship-base\": {\n      \"$ref\": \"https://calm.finos.org/release/1.0/meta/core.json#/defs/relationship\"\n    }\n  },\n  \"properties\": {\n    \"nodes\": {\n      \"type\": \"array\",\n      \"minItems\": 5,\n      \"prefixItems\": [\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that triggers a Scheduled Event\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"Trigger\" },\n            \"unique-id\": { \"const\": \"trigger\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that sends request to the Enterprise API when it is triggered\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"'Fetch from System' Connector\" },\n            \"unique-id\": { \"const\": \"fetch-from-system-connector\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that converts payload to System Data Model\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"Processing\" },\n            \"unique-id\": { \"const\": \"processing\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Molecule that initiates connection to System and sends payload over it\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"'Send to System' Connector\" },\n            \"unique-id\": { \"const\": \"send-to-system-connector\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/node-base\",\n          \"properties\": {\n            \"description\": { \"const\": \"Target System\" },\n            \"node-type\": { \"const\": \"system\" },\n            \"name\": { \"const\": \"Target System\" },\n            \"unique-id\": { \"const\": \"target-system\" }\n          }\n        }\n      ]\n    },\n    \"relationships\": {\n      \"type\": \"array\",\n      \"minItems\": 4,\n      \"prefixItems\": [\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"event-trigger\" },\n            \"description\": { \"const\": \"Scheduled event triggers API request\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"trigger\" },\n                  \"destination\": { \"node\": \"fetch-from-system-connector\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" },\n            \"authentication\": { \"const\": \"OAuth2\" },\n            \"controls\": {\n              \"$ref\": \"https://calm.finos.org/release/1.0/meta/control.json#/defs/controls\",\n              \"properties\": {\n                \"encryption\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"description\": {\n                      \"const\": \"Encryption controls for data in transit\"\n                    },\n                    \"requirements\": {\n                      \"type\": \"array\",\n                      \"minItems\": 1,\n                      \"prefixItems\": [\n                        {\n                          \"$ref\": \"https://calm.finos.org/release/1.0/meta/control.json#/defs/control-detail\",\n                          \"properties\": {\n                            \"requirement-url\": {\n                              \"const\": \"/home/fbacon/CALM/demo/requirements/encryption-in-transit-requirement.json\"\n                            },\n                            \"config-url\": {\n                              \"const\": \"/home/fbacon/CALM/demo/configs/encryption-in-transit-config.json\"\n                            }\n                          }\n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"required\": [\"controls\"]\n        },\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"publish-response\" },\n            \"description\": { \"const\": \"Publishes response payload for processing\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"fetch-from-system-connector\" },\n                  \"destination\": { \"node\": \"processing\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"processing complete\" },\n            \"description\": { \"const\": \"Publishes transformed payload to 'Send to System' Connector\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"processing\" },\n                  \"destination\": { \"node\": \"send-to-system-connector\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" }\n          }\n        },\n        {\n          \"$ref\": \"#/$defs/relationship-base\",\n          \"properties\": {\n            \"unique-id\": { \"const\": \"payload-to-system\" },\n            \"description\": { \"const\": \"Initiates connection to System and sends payload over it\" },\n            \"relationship-type\": {\n              \"const\": {\n                \"connects\": {\n                  \"source\": { \"node\": \"send-to-system-connector\" },\n                  \"destination\": { \"node\": \"target-system\" }\n                }\n              }\n            },\n            \"protocol\": { \"const\": \"HTTPS\" }\n          }\n        }\n      ]\n    }\n  },\n  \"required\": [\"nodes\", \"relationships\"]\n}"
  },
  {
    "objectID": "calm/index.html#lets-try-a-calm-validate",
    "href": "calm/index.html#lets-try-a-calm-validate",
    "title": "CALM: Architecture-as-Code",
    "section": "Let’s try a calm validate",
    "text": "Let’s try a calm validate\nsource ~/miniconda3/etc/profile.d/conda.sh && conda activate quarto\ncalm validate -p ../architecture/pattern.json -a ../architecture/architecture.json"
  },
  {
    "objectID": "calm/code-blocks/workflow-ii.html",
    "href": "calm/code-blocks/workflow-ii.html",
    "title": "Finley Bacon",
    "section": "",
    "text": "workspace \"ARC Services Portal\" \"Models the architecture of a research services web portal\" {\n\n    !identifiers hierarchical\n\n    model {\n\n        properties {\n            \"structurizr.groupSeparator\" \"/\"\n        }\n\n        user = person \"Researcher\" \"Uses the platform to manage their research profile and data.\"\n        admin = person \"Admin\" \"Portal user with elevated permissions to edit data or review submissions.\"\n\n        entra = softwareSystem \"Microsoft Entra\" \"Identity provider (SSO)\" \"Existing System\"\n        tre = softwareSystem \"TRE\" \"Secure processing environment for sensitive research data\" \"Existing System\"\n        ghcr = softwareSystem \"GitHub Container Registry\" \"Stores container images\" \"Existing System\"\n        uclSystem = softwareSystem \"...\" \"Other UCL consumer of portal data\" \"Existing System\"\n\n        portal = softwareSystem \"ARC Services Portal\" \"Enables management of Studies, Projects, user training and information governance\" {\n\n            group \"K8S cluster\" {\n\n                api = container \"API\" \"API backend with /web/api and /tre/api (and other) endpoints\" \"Go\" {\n\n                    group \"Shared Services\" {\n                        projectService = component \"Project Service\" \"Handles project workflows\" \"Go\"\n                        userService = component \"User Service\" \"Handles user workflows\" \"Go\"\n                        otherService = component \"...\" \"Other backend services\" \"Go\"\n                    }\n\n                    group \"Web API\" {\n                        webhttpHandlers = component \"HTTP Handlers for web frontend\" \"Handles REST endpoints\" \"Go\"\n                        webhttpHandlers -&gt; userService \"Calls\"\n                        webhttpHandlers -&gt; projectService \"Calls\"\n                        webhttpHandlers -&gt; otherService \"Calls\"\n                    }\n\n                    group \"TRE API\" {\n                        trehttpHandlers = component \"HTTP Handlers for UCL TREs\" \"Handles REST endpoints\" \"Go\"\n                        trehttpHandlers -&gt; userService \"Calls\"\n                        trehttpHandlers -&gt; projectService \"Calls\"\n                        trehttpHandlers -&gt; otherService \"Calls\"\n                    }\n\n                    group \"Other API\" {\n                        otherhttpHandlers = component \"HTTP Handlers for other UCL systems\" \"Handles REST endpoints\" \"Go\"\n                        otherhttpHandlers -&gt; otherService \"Calls\"\n                    }\n                }\n\n                webFrontend = container \"Web Frontend\" \"User-facing web app\" \"React, TypeScript\" {\n                    pages = component \"Pages\" \"UCL Design System-styled pages for profile, studies, projects\" \"React\"\n                    apiClient = component \"API Client\" \"Generated from OpenAPI spec\" \"TypeScript\"\n\n                    pages -&gt; apiClient \"Calls\"\n                }\n\n                oauth2Proxy = container \"OAuth2 Proxy\" \"Proxy providing OAuth2 authentication\" \"quay.io/oauth2-proxy/oauth2-proxy\"\n\n                nginx = container \"Reverse Proxy\" \"Routes requests to frontend and backend\" \"nginx\"\n\n                postgres = container \"Database\" \"Stores user, project, portal etc. data\" \"PostgreSQL\"\n\n                api.projectService -&gt; postgres \"Reads/writes data\"\n                api.userService -&gt; postgres \"Reads/writes data\"\n                api.otherService -&gt; postgres \"Read/writes data\"\n                nginx -&gt; api.trehttpHandlers \"Proxies /tre/api requests\"\n                nginx -&gt; api.otherhttpHandlers \"Proxies other api requests\"\n                nginx -&gt; webFrontend.pages \"Serves\"\n                webFrontend.apiClient -&gt; oauth2Proxy \"Forwards /web/api requests for authentication\"\n                oauth2Proxy -&gt; api.webhttpHandlers \"Forwards authenticated /web/api requests to backend\"\n\n            }\n\n            deploy = container \"CI/CD Pipeline\" \"Builds and deploys infrastructure and app\" \"GitHub Actions + Terraform\" {\n\n                group \"Portal App Repository\" {\n                    gha_portal = component \"GitHub Actions (Portal Repo)\" \"Builds & pushes container images\" \"GitHub Actions\"\n                }\n\n                group \"Infrastructure Repository\" {\n                    gha_infra = component \"GitHub Actions (Infra Repo)\" \"Applies Terraform in AWS\" \"GitHub Actions\"\n                    tf = component \"Terraform Code\" \"Defines and provisions cloud infra\" \"Terraform\"\n                    gha_infra -&gt; tf \"Runs\"\n                }\n            }\n\n            portal.deploy.tf -&gt; ghcr \"Pulls images for deployment\"\n            portal.deploy.gha_portal -&gt; ghcr \"Pushes container images\"\n        }\n\n        user -&gt; portal.webFrontend.pages \"Accesses via browser\"\n        admin -&gt; portal.webFrontend.pages \"Administers via browser\"\n        portal.oauth2Proxy -&gt; entra \"Authenticates requests against\" \"SSO\"\n        tre -&gt; portal.nginx \"Accesses /tre/api for data retrieval\" \"REST/JSON\"\n        uclSystem -&gt; portal.nginx \"Accesses api for data retrieval\" \"REST/JSON\"\n    }\n\n    views {\n\n        systemContext portal \"C1-Portal_Context\" {\n            include *\n            description \"Context diagram showing how the Research Platform fits within the broader environment.\"\n        }\n\n        container portal \"C2-Portal_Containers\" {\n            include *\n            description \"Container view showing major services running in Kubernetes, including API, frontend, proxy, and DB.\"\n        }\n\n        component portal.api \"C3-Web_API_Internals\" {\n            include *\n            description \"Component view showing key service components inside the API backend.\"\n        }\n\n        component portal.webFrontend \"C3-Web_Frontend_Internals\" {\n            include *\n            description \"Component view showing the UI modules and OpenAPI client.\"\n        }\n\n        component portal.deploy \"C3-Deployment_Workflow\" {\n            include *\n            description \"Component view showing how CI/CD is managed using GitHub Actions and Terraform.\"\n        }\n\n        styles {\n            element \"Person\" {\n                shape person\n                background #08427b\n                color #ffffff\n            }\n\n            element \"Software System\" {\n                background #1168bd\n                color #ffffff\n            }\n\n            element \"Container\" {\n                background #438dd5\n                color #ffffff\n            }\n\n            element \"Component\" {\n                background #85bbf0\n                color #000000\n            }\n\n            element \"Existing System\" {\n                background #999999\n            }\n\n            element \"Group:K8S cluster\" {\n                color #d86613\n                icon https://static.structurizr.com/themes/amazon-web-services-2020.04.30/amazon-elastic-kubernetes-service.png\n            }\n        }\n    }\n}"
  },
  {
    "objectID": "calm/code-blocks/calm-cli.html",
    "href": "calm/code-blocks/calm-cli.html",
    "title": "Finley Bacon",
    "section": "",
    "text": "Usage: calm [options] [command]\n\nA set of tools for interacting with the Common Architecture Language Model (CALM)\n\nOptions:\n  -V, --version       output the version number\n  -h, --help          display help for command\n\nCommands:\n  generate [options]  Generate an architecture from a CALM pattern file.\n  validate [options]  Validate that an architecture conforms to a given CALM pattern.\n  docify [options]    Generate a documentation website off your CALM model\n  help [command]      display help for command"
  },
  {
    "objectID": "calm/code-blocks/workflow-iii.html",
    "href": "calm/code-blocks/workflow-iii.html",
    "title": "Finley Bacon",
    "section": "",
    "text": "workspace \"ARC Services Portal\" \"Models the architecture of a research services web portal\" {\n\n    !identifiers hierarchical\n\n    model {\n\n        properties {\n            \"structurizr.groupSeparator\" \"/\"\n        }\n\n        user = person \"Researcher\" \"Uses the platform to manage their research profile and data.\"\n        admin = person \"Admin\" \"Portal user with elevated permissions to edit data or review submissions.\"\n\n        entra = softwareSystem \"Microsoft Entra\" \"Identity provider (SSO)\" \"Existing System\"\n        tre = softwareSystem \"TRE\" \"Secure processing environment for sensitive research data\" \"Existing System\"\n        ghcr = softwareSystem \"GitHub Container Registry\" \"Stores container images\" \"Existing System\"\n        uclSystem = softwareSystem \"...\" \"Other UCL consumer of portal data\" \"Existing System\"\n\n        portal = softwareSystem \"ARC Services Portal\" \"Enables management of Studies, Projects, user training and information governance\" {\n\n            group \"K8S cluster\" {\n\n                api = container \"API\" \"API backend with /web/api and /tre/api (and other) endpoints\" \"Go\" {\n\n                    group \"Shared Services\" {\n                        projectService = component \"Project Service\" \"Handles project workflows\" \"Go\"\n                        userService = component \"User Service\" \"Handles user workflows\" \"Go\"\n                        otherService = component \"...\" \"Other backend services\" \"Go\"\n                    }\n\n                    group \"Web API\" {\n                        webhttpHandlers = component \"HTTP Handlers for web frontend\" \"Handles REST endpoints\" \"Go\"\n                        webhttpHandlers -&gt; userService \"Calls\"\n                        webhttpHandlers -&gt; projectService \"Calls\"\n                        webhttpHandlers -&gt; otherService \"Calls\"\n                    }\n\n                    group \"TRE API\" {\n                        trehttpHandlers = component \"HTTP Handlers for UCL TREs\" \"Handles REST endpoints\" \"Go\"\n                        trehttpHandlers -&gt; userService \"Calls\"\n                        trehttpHandlers -&gt; projectService \"Calls\"\n                        trehttpHandlers -&gt; otherService \"Calls\"\n                    }\n\n                    group \"Other API\" {\n                        otherhttpHandlers = component \"HTTP Handlers for other UCL systems\" \"Handles REST endpoints\" \"Go\"\n                        otherhttpHandlers -&gt; otherService \"Calls\"\n                    }\n                }\n\n                webFrontend = container \"Web Frontend\" \"User-facing web app\" \"React, TypeScript\" {\n                    pages = component \"Pages\" \"UCL Design System-styled pages for profile, studies, projects\" \"React\"\n                    apiClient = component \"API Client\" \"Generated from OpenAPI spec\" \"TypeScript\"\n\n                    pages -&gt; apiClient \"Calls\"\n                }\n\n                oauth2Proxy = container \"OAuth2 Proxy\" \"Proxy providing OAuth2 authentication\" \"quay.io/oauth2-proxy/oauth2-proxy\"\n\n                nginx = container \"Reverse Proxy\" \"Routes requests to frontend and backend\" \"nginx\"\n\n                postgres = container \"Database\" \"Stores user, project, portal etc. data\" \"PostgreSQL\"\n\n                api.projectService -&gt; postgres \"Reads/writes data\"\n                api.userService -&gt; postgres \"Reads/writes data\"\n                api.otherService -&gt; postgres \"Read/writes data\"\n                nginx -&gt; api.trehttpHandlers \"Proxies /tre/api requests\"\n                nginx -&gt; api.otherhttpHandlers \"Proxies other api requests\"\n                nginx -&gt; webFrontend.pages \"Serves\"\n                webFrontend.apiClient -&gt; oauth2Proxy \"Forwards /web/api requests for authentication\"\n                oauth2Proxy -&gt; api.webhttpHandlers \"Forwards authenticated /web/api requests to backend\"\n\n            }\n\n            deploy = container \"CI/CD Pipeline\" \"Builds and deploys infrastructure and app\" \"GitHub Actions + Terraform\" {\n\n                group \"Portal App Repository\" {\n                    gha_portal = component \"GitHub Actions (Portal Repo)\" \"Builds & pushes container images\" \"GitHub Actions\"\n                }\n\n                group \"Infrastructure Repository\" {\n                    gha_infra = component \"GitHub Actions (Infra Repo)\" \"Applies Terraform in AWS\" \"GitHub Actions\"\n                    tf = component \"Terraform Code\" \"Defines and provisions cloud infra\" \"Terraform\"\n                    gha_infra -&gt; tf \"Runs\"\n                }\n            }\n\n            portal.deploy.tf -&gt; ghcr \"Pulls images for deployment\"\n            portal.deploy.gha_portal -&gt; ghcr \"Pushes container images\"\n        }\n\n        user -&gt; portal.webFrontend.pages \"Accesses via browser\"\n        admin -&gt; portal.webFrontend.pages \"Administers via browser\"\n        portal.oauth2Proxy -&gt; entra \"Authenticates requests against\" \"SSO\"\n        tre -&gt; portal.nginx \"Accesses /tre/api for data retrieval\" \"REST/JSON\"\n        uclSystem -&gt; portal.nginx \"Accesses api for data retrieval\" \"REST/JSON\"\n    }\n\n    views {\n\n        systemContext portal \"C1-Portal_Context\" {\n            include *\n            description \"Context diagram showing how the Research Platform fits within the broader environment.\"\n        }\n\n        container portal \"C2-Portal_Containers\" {\n            include *\n            description \"Container view showing major services running in Kubernetes, including API, frontend, proxy, and DB.\"\n        }\n\n        component portal.api \"C3-Web_API_Internals\" {\n            include *\n            description \"Component view showing key service components inside the API backend.\"\n        }\n\n        component portal.webFrontend \"C3-Web_Frontend_Internals\" {\n            include *\n            description \"Component view showing the UI modules and OpenAPI client.\"\n        }\n\n        component portal.deploy \"C3-Deployment_Workflow\" {\n            include *\n            description \"Component view showing how CI/CD is managed using GitHub Actions and Terraform.\"\n        }\n\n        styles {\n            element \"Person\" {\n                shape person\n                background #08427b\n                color #ffffff\n            }\n\n            element \"Software System\" {\n                background #1168bd\n                color #ffffff\n            }\n\n            element \"Container\" {\n                background #438dd5\n                color #ffffff\n            }\n\n            element \"Component\" {\n                background #85bbf0\n                color #000000\n            }\n\n            element \"Existing System\" {\n                background #999999\n            }\n\n            element \"Group:K8S cluster\" {\n                color #d86613\n                icon https://static.structurizr.com/themes/amazon-web-services-2020.04.30/amazon-elastic-kubernetes-service.png\n            }\n        }\n    }\n}"
  },
  {
    "objectID": "calm/code-blocks/control-config.html",
    "href": "calm/code-blocks/control-config.html",
    "title": "Finley Bacon",
    "section": "",
    "text": "{\n  \"protocol\": \"HTTPS\",\n  \"tls-version\": \"1.0\"\n}"
  },
  {
    "objectID": "calm/code-blocks/workflow-i.html",
    "href": "calm/code-blocks/workflow-i.html",
    "title": "Finley Bacon",
    "section": "",
    "text": "workspace \"ARC Services Portal\" \"Models the architecture of a research services web portal\" {\n\n    !identifiers hierarchical\n\n    model {\n\n        properties {\n            \"structurizr.groupSeparator\" \"/\"\n        }\n\n        user = person \"Researcher\" \"Uses the platform to manage their research profile and data.\"\n        admin = person \"Admin\" \"Portal user with elevated permissions to edit data or review submissions.\"\n\n        entra = softwareSystem \"Microsoft Entra\" \"Identity provider (SSO)\" \"Existing System\"\n        tre = softwareSystem \"TRE\" \"Secure processing environment for sensitive research data\" \"Existing System\"\n        ghcr = softwareSystem \"GitHub Container Registry\" \"Stores container images\" \"Existing System\"\n        uclSystem = softwareSystem \"...\" \"Other UCL consumer of portal data\" \"Existing System\"\n\n        portal = softwareSystem \"ARC Services Portal\" \"Enables management of Studies, Projects, user training and information governance\" {\n\n            group \"K8S cluster\" {\n\n                api = container \"API\" \"API backend with /web/api and /tre/api (and other) endpoints\" \"Go\" {\n\n                    group \"Shared Services\" {\n                        projectService = component \"Project Service\" \"Handles project workflows\" \"Go\"\n                        userService = component \"User Service\" \"Handles user workflows\" \"Go\"\n                        otherService = component \"...\" \"Other backend services\" \"Go\"\n                    }\n\n                    group \"Web API\" {\n                        webhttpHandlers = component \"HTTP Handlers for web frontend\" \"Handles REST endpoints\" \"Go\"\n                        webhttpHandlers -&gt; userService \"Calls\"\n                        webhttpHandlers -&gt; projectService \"Calls\"\n                        webhttpHandlers -&gt; otherService \"Calls\"\n                    }\n\n                    group \"TRE API\" {\n                        trehttpHandlers = component \"HTTP Handlers for UCL TREs\" \"Handles REST endpoints\" \"Go\"\n                        trehttpHandlers -&gt; userService \"Calls\"\n                        trehttpHandlers -&gt; projectService \"Calls\"\n                        trehttpHandlers -&gt; otherService \"Calls\"\n                    }\n\n                    group \"Other API\" {\n                        otherhttpHandlers = component \"HTTP Handlers for other UCL systems\" \"Handles REST endpoints\" \"Go\"\n                        otherhttpHandlers -&gt; otherService \"Calls\"\n                    }\n                }\n\n                webFrontend = container \"Web Frontend\" \"User-facing web app\" \"React, TypeScript\" {\n                    pages = component \"Pages\" \"UCL Design System-styled pages for profile, studies, projects\" \"React\"\n                    apiClient = component \"API Client\" \"Generated from OpenAPI spec\" \"TypeScript\"\n\n                    pages -&gt; apiClient \"Calls\"\n                }\n\n                oauth2Proxy = container \"OAuth2 Proxy\" \"Proxy providing OAuth2 authentication\" \"quay.io/oauth2-proxy/oauth2-proxy\"\n\n                nginx = container \"Reverse Proxy\" \"Routes requests to frontend and backend\" \"nginx\"\n\n                postgres = container \"Database\" \"Stores user, project, portal etc. data\" \"PostgreSQL\"\n\n                api.projectService -&gt; postgres \"Reads/writes data\"\n                api.userService -&gt; postgres \"Reads/writes data\"\n                api.otherService -&gt; postgres \"Read/writes data\"\n                nginx -&gt; api.trehttpHandlers \"Proxies /tre/api requests\"\n                nginx -&gt; api.otherhttpHandlers \"Proxies other api requests\"\n                nginx -&gt; webFrontend.pages \"Serves\"\n                webFrontend.apiClient -&gt; oauth2Proxy \"Forwards /web/api requests for authentication\"\n                oauth2Proxy -&gt; api.webhttpHandlers \"Forwards authenticated /web/api requests to backend\"\n\n            }\n\n            deploy = container \"CI/CD Pipeline\" \"Builds and deploys infrastructure and app\" \"GitHub Actions + Terraform\" {\n\n                group \"Portal App Repository\" {\n                    gha_portal = component \"GitHub Actions (Portal Repo)\" \"Builds & pushes container images\" \"GitHub Actions\"\n                }\n\n                group \"Infrastructure Repository\" {\n                    gha_infra = component \"GitHub Actions (Infra Repo)\" \"Applies Terraform in AWS\" \"GitHub Actions\"\n                    tf = component \"Terraform Code\" \"Defines and provisions cloud infra\" \"Terraform\"\n                    gha_infra -&gt; tf \"Runs\"\n                }\n            }\n\n            portal.deploy.tf -&gt; ghcr \"Pulls images for deployment\"\n            portal.deploy.gha_portal -&gt; ghcr \"Pushes container images\"\n        }\n\n        user -&gt; portal.webFrontend.pages \"Accesses via browser\"\n        admin -&gt; portal.webFrontend.pages \"Administers via browser\"\n        portal.oauth2Proxy -&gt; entra \"Authenticates requests against\" \"SSO\"\n        tre -&gt; portal.nginx \"Accesses /tre/api for data retrieval\" \"REST/JSON\"\n        uclSystem -&gt; portal.nginx \"Accesses api for data retrieval\" \"REST/JSON\"\n    }\n\n    views {\n\n        systemContext portal \"C1-Portal_Context\" {\n            include *\n            description \"Context diagram showing how the Research Platform fits within the broader environment.\"\n        }\n\n        container portal \"C2-Portal_Containers\" {\n            include *\n            description \"Container view showing major services running in Kubernetes, including API, frontend, proxy, and DB.\"\n        }\n\n        component portal.api \"C3-Web_API_Internals\" {\n            include *\n            description \"Component view showing key service components inside the API backend.\"\n        }\n\n        component portal.webFrontend \"C3-Web_Frontend_Internals\" {\n            include *\n            description \"Component view showing the UI modules and OpenAPI client.\"\n        }\n\n        component portal.deploy \"C3-Deployment_Workflow\" {\n            include *\n            description \"Component view showing how CI/CD is managed using GitHub Actions and Terraform.\"\n        }\n\n        styles {\n            element \"Person\" {\n                shape person\n                background #08427b\n                color #ffffff\n            }\n\n            element \"Software System\" {\n                background #1168bd\n                color #ffffff\n            }\n\n            element \"Container\" {\n                background #438dd5\n                color #ffffff\n            }\n\n            element \"Component\" {\n                background #85bbf0\n                color #000000\n            }\n\n            element \"Existing System\" {\n                background #999999\n            }\n\n            element \"Group:K8S cluster\" {\n                color #d86613\n                icon https://static.structurizr.com/themes/amazon-web-services-2020.04.30/amazon-elastic-kubernetes-service.png\n            }\n        }\n    }\n}"
  },
  {
    "objectID": "calm/index.html#example",
    "href": "calm/index.html#example",
    "title": "CALM: Architecture-as-Code",
    "section": "Example",
    "text": "Example\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={\"projection\": \"polar\"})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()"
  },
  {
    "objectID": "calm/index.html#output",
    "href": "calm/index.html#output",
    "title": "CALM: Architecture-as-Code",
    "section": "Output",
    "text": "Output\n\n\nHello world!"
  }
]